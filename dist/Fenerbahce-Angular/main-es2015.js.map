{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-event/add-event.component.html","./src/app/add-group/add-group.component.html","./src/app/add-instructor/add-instructor.component.html","./src/app/add-news/add-news.component.html","./src/app/add-payment/add-payment.component.html","./src/app/add-school/add-school.component.html","./src/app/add-student/add-student.component.html","./src/app/app.component.html","./src/app/edit-event/edit-event.component.html","./src/app/edit-group/edit-group.component.html","./src/app/edit-instructor/edit-instructor.component.html","./src/app/edit-news/edit-news.component.html","./src/app/edit-payment/edit-payment.component.html","./src/app/edit-school/edit-school.component.html","./src/app/edit-student/edit-student.component.html","./src/app/group-schedule/group-schedule.component.html","./src/app/group/group.component.html","./src/app/groups/groups.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/main/main.component.html","./src/app/news-detail/news-detail.component.html","./src/app/news/news.component.html","./src/app/register-user/register-user.component.html","./src/app/school-schedule/school-schedule.component.html","./src/app/school/school.component.html","./src/app/schools/schools.component.html","./src/app/search-dialog/search-dialog.component.html","./src/app/sidebar/sidebar.component.html","./src/app/spinner/spinner.component.html","./src/app/student/student.component.html","./src/app/users/users.component.html","./src/app/add-event/add-event.component.css","./src/app/add-event/add-event.component.ts","./src/app/add-group/add-group.component.css","./src/app/add-group/add-group.component.ts","./src/app/add-instructor/add-instructor.component.css","./src/app/add-instructor/add-instructor.component.ts","./src/app/add-news/add-news.component.css","./src/app/add-news/add-news.component.ts","./src/app/add-payment/add-payment.component.css","./src/app/add-payment/add-payment.component.ts","./src/app/add-school/add-school.component.css","./src/app/add-school/add-school.component.ts","./src/app/add-student/add-student.component.css","./src/app/add-student/add-student.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/constants.ts","./src/app/edit-event/edit-event.component.css","./src/app/edit-event/edit-event.component.ts","./src/app/edit-group/edit-group.component.css","./src/app/edit-group/edit-group.component.ts","./src/app/edit-instructor/edit-instructor.component.css","./src/app/edit-instructor/edit-instructor.component.ts","./src/app/edit-news/edit-news.component.css","./src/app/edit-news/edit-news.component.ts","./src/app/edit-payment/edit-payment.component.css","./src/app/edit-payment/edit-payment.component.ts","./src/app/edit-school/edit-school.component.css","./src/app/edit-school/edit-school.component.ts","./src/app/edit-student/edit-student.component.css","./src/app/edit-student/edit-student.component.ts","./src/app/group-schedule/group-schedule.component.css","./src/app/group-schedule/group-schedule.component.ts","./src/app/group/group.component.css","./src/app/group/group.component.ts","./src/app/groups/groups.component.css","./src/app/groups/groups.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/main/main.component.css","./src/app/main/main.component.ts","./src/app/news-detail/news-detail.component.css","./src/app/news-detail/news-detail.component.ts","./src/app/news/news.component.css","./src/app/news/news.component.ts","./src/app/register-user/register-user.component.css","./src/app/register-user/register-user.component.ts","./src/app/school-schedule/school-schedule.component.css","./src/app/school-schedule/school-schedule.component.ts","./src/app/school/school.component.css","./src/app/school/school.component.ts","./src/app/schools/schools.component.css","./src/app/schools/schools.component.ts","./src/app/search-dialog/search-dialog.component.css","./src/app/search-dialog/search-dialog.component.ts","./src/app/services/authorization.service.ts","./src/app/services/event.service.ts","./src/app/services/global.service.ts","./src/app/services/group.service.ts","./src/app/services/instructor.service.ts","./src/app/services/news.service.ts","./src/app/services/parent.service.ts","./src/app/services/payment.service.ts","./src/app/services/school.service.ts","./src/app/services/search.service.ts","./src/app/services/spinner.service.ts","./src/app/services/sport.service.ts","./src/app/services/student.service.ts","./src/app/services/user.service.ts","./src/app/sidebar/sidebar.component.css","./src/app/sidebar/sidebar.component.ts","./src/app/spinner/spinner.component.css","./src/app/spinner/spinner.component.ts","./src/app/student/student.component.css","./src/app/student/student.component.ts","./src/app/users/users.component.css","./src/app/users/users.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD EVENT</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"eventForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"createEvent(eventForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field *ngIf=\\\"isGroupSectionEnabledx\\\" class=\\\"full-width\\\">\\r\\n                    <mat-label>Group</mat-label>\\r\\n                    <mat-select formControlName=\\\"groupId\\\">\\r\\n                        <mat-option *ngFor=\\\"let group of groups\\\" [value]=\\\"group.GroupId\\\">\\r\\n                            {{ group.GroupName }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"eventDate\\\" formControlName=\\\"eventDate\\\" placeholder=\\\"Event Date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"eventDate\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #eventDate></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"full-width\\\" id=\\\"time-input\\\">\\r\\n                    <input matInput [ngxTimepicker]=\\\"toggleTimepicker\\\" formControlName=\\\"eventTime\\\" [format]=\\\"24\\\" [disableClick]=\\\"true\\\" readonly readonly>\\r\\n                    <ngx-material-timepicker-toggle [for]=\\\"toggleTimepicker\\\"></ngx-material-timepicker-toggle>\\r\\n                    <ngx-material-timepicker #toggleTimepicker></ngx-material-timepicker>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"number\\\" formControlName=\\\"duration\\\" placeholder=\\\"Duration\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"text\\\" formControlName=\\\"addInfo\\\" placeholder=\\\"Notes\\\">\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>Frequency</mat-label>\\r\\n                    <mat-select formControlName=\\\"frequency\\\">\\r\\n                        <mat-option *ngFor=\\\"let frequency of frequencies\\\" [value]=\\\"frequency.FrequencyId\\\">\\r\\n                            {{ frequency.Description }}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n                <mat-form-field *ngIf=\\\"isDueDateEnable()\\\" class=\\\"full-width\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"dueDate\\\" placeholder=\\\"Due Date\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!eventForm.valid || !eventForm.dirty\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD GROUP</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"addGroupForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"addGroup(addGroupForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"groupName\\\" placeholder=\\\"Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('groupName', 'required')\\\">Name is required</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>Sport</mat-label>\\r\\n                    <mat-select formControlName=\\\"sportId\\\">\\r\\n                        <mat-option *ngFor=\\\"let sport of sports\\\" [value]=\\\"sport.SportId\\\">\\r\\n                            {{sport.SportName}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>School</mat-label>\\r\\n                    <mat-select formControlName=\\\"schoolId\\\">\\r\\n                        <mat-option *ngFor=\\\"let school of schools\\\" [value]=\\\"school.SchoolId\\\">\\r\\n                            {{school.SchoolName}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!addGroupForm.valid\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD INSTRUCTOR</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"addInstructorForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"addInstructor(addInstructorForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>Instructor</mat-label>\\r\\n                    <mat-select formControlName=\\\"Instructor\\\">\\r\\n                        <mat-option *ngFor=\\\"let instructor of instructors\\\" [value]=\\\"instructor.InstructorId\\\">\\r\\n                            {{instructor.FirstName + instructor.LastName}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>Salary Type</mat-label>\\r\\n                    <mat-select formControlName=\\\"Type\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of salaryTypes\\\" [value]=\\\"type.TypeCode\\\">\\r\\n                            {{type.TypeDescription}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"number\\\" formControlName=\\\"Salary\\\" placeholder=\\\"Salary\\\">\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!addInstructorForm.valid\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div style=\\\"margin: 0 100px;\\\" class=\\\"main-div\\\">\\r\\n        <md-card class=\\\"full-width\\\">\\r\\n            <md-card-header>\\r\\n                <md-card-header-text>\\r\\n                    <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD NEWS</h2>\\r\\n                </md-card-header-text>\\r\\n            </md-card-header>\\r\\n            <form [formGroup]=\\\"newsForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"create(newsForm.value)\\\"\\r\\n                fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <md-card-content>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput formControlName=\\\"newsTitle\\\" placeholder=\\\"Title\\\">\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"full-width\\\">\\r\\n                        <input #logoImage formControlName=\\\"newsLogo\\\" type=\\\"file\\\" placeholder=\\\"Logo\\\" (change)=\\\"onFileChanged($event)\\\">\\r\\n                    </div>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <textarea matInput \\r\\n                                  cdkTextareaAutosize\\r\\n                                  #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                                  cdkAutosizeMinRows=\\\"10\\\"\\r\\n                                  cdkAutosizeMaxRows=\\\"50\\\"\\r\\n                                  formControlName=\\\"newsText\\\" \\r\\n                                  placeholder=\\\"Text\\\"></textarea>\\r\\n                    </mat-form-field>    \\r\\n                </md-card-content>\\r\\n                <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"!newsForm.valid\\\">Submit</button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </md-card>\\r\\n    </div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD PAYMENT</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"addPaymentForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"addPayment(addPaymentForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"number\\\" formControlName=\\\"amount\\\" placeholder=\\\"Amount\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>Type</mat-label>\\r\\n                    <mat-select formControlName=\\\"type\\\">\\r\\n                        <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type.TypeCode\\\">\\r\\n                            {{type.TypeDescription}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!addPaymentForm.valid\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD SCHOOL</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"schoolForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"create(schoolForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"schoolName\\\" placeholder=\\\"Name\\\">\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"full-width\\\">\\r\\n                    <input #logoImage formControlName=\\\"logo\\\" type=\\\"file\\\" placeholder=\\\"Logo\\\" (change)=\\\"onFileChanged($event)\\\">\\r\\n                </div>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!schoolForm.valid\\\">Create</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD STUDENT</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"addStudentForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"addStudent(addStudentForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"LastName\\\" placeholder=\\\"Last Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('LastName', 'required')\\\">Last Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('LastName', 'pattern')\\\">Last Name is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"FirstName\\\" placeholder=\\\"First Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('FirstName', 'required')\\\">First Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('FirstName', 'pattern')\\\">First Name is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput  [matDatepicker]=\\\"DateOfBirthPicker\\\" formControlName=\\\"DateOfBirth\\\"\\r\\n                        placeholder=\\\"Date Start\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"DateOfBirthPicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #DateOfBirthPicker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"Patrimonial\\\" placeholder=\\\"Patrimonial\\\">\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!addStudentForm.valid\\\">Create</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<app-sidebar style=\\\"position: absolute;\\\"></app-sidebar>\\r\\n<app-spinner id=\\\"spinner\\\" [name]=\\\"this.spinnerName\\\"></app-spinner>\\r\\n<router-outlet></router-outlet>\\r\\n\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n        <md-card style=\\\"max-width: 500px; \\\">\\r\\n            <md-card-header>\\r\\n                <md-card-header-text>\\r\\n                    <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">EDIT EVENT</h2>\\r\\n                </md-card-header-text>\\r\\n            </md-card-header>\\r\\n            <form [formGroup]=\\\"eventForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"createEvent(eventForm.value)\\\"\\r\\n                fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <md-card-content>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput [matDatepicker]=\\\"eventDate\\\" formControlName=\\\"eventDate\\\" placeholder=\\\"Event Date\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"eventDate\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #eventDate></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n    \\r\\n                    <mat-form-field class=\\\"full-width\\\" id=\\\"time-input\\\">\\r\\n                        <input matInput [ngxTimepicker]=\\\"toggleTimepicker\\\" formControlName=\\\"eventTime\\\" [format]=\\\"24\\\" [disableClick]=\\\"true\\\" readonly readonly>\\r\\n                        <ngx-material-timepicker-toggle [for]=\\\"toggleTimepicker\\\"></ngx-material-timepicker-toggle>\\r\\n                        <ngx-material-timepicker #toggleTimepicker></ngx-material-timepicker>\\r\\n                    </mat-form-field>\\r\\n    \\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput type=\\\"number\\\" formControlName=\\\"duration\\\" placeholder=\\\"Duration\\\">\\r\\n                    </mat-form-field>\\r\\n    \\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput type=\\\"text\\\" formControlName=\\\"addInfo\\\" placeholder=\\\"Notes\\\">\\r\\n                    </mat-form-field>    \\r\\n                </md-card-content>\\r\\n                <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"!eventForm.valid || !eventForm.dirty\\\">Submit</button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </md-card>\\r\\n    </div>\"","module.exports = \"<div *ngIf=\\\"schools && sports\\\" class=\\\"main-div\\\">\\r\\n        <md-card style=\\\"max-width: 500px; \\\">\\r\\n            <md-card-header>\\r\\n                <md-card-header-text>\\r\\n                    <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">EDIT GROUP</h2>\\r\\n                </md-card-header-text>\\r\\n            </md-card-header>\\r\\n            <form [formGroup]=\\\"editGroupForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"saveGroup(editGroupForm.value)\\\"\\r\\n                fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <md-card-content>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput formControlName=\\\"groupName\\\" placeholder=\\\"Name\\\">\\r\\n                        <mat-error *ngIf=\\\"hasError('groupName', 'required')\\\">Name is required</mat-error>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <mat-label>Sport</mat-label>\\r\\n                        <mat-select formControlName=\\\"sportId\\\">\\r\\n                            <mat-option *ngFor=\\\"let sport of sports\\\" [value]=\\\"sport.SportId\\\">\\r\\n                                {{sport.SportName}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <mat-label>School</mat-label>\\r\\n                        <mat-select formControlName=\\\"schoolId\\\">\\r\\n                            <mat-option *ngFor=\\\"let school of schools\\\" [value]=\\\"school.SchoolId\\\">\\r\\n                                {{school.SchoolName}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </md-card-content>\\r\\n                <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"!editGroupForm.valid || !editGroupForm.dirty\\\">Submit</button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </md-card>\\r\\n    </div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n        <md-card style=\\\"max-width: 500px; \\\">\\r\\n            <md-card-header>\\r\\n                <md-card-header-text>\\r\\n                    <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">EDIT INSTRUCTOR</h2>\\r\\n                </md-card-header-text>\\r\\n            </md-card-header>\\r\\n            <form [formGroup]=\\\"editInstructorForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"editInstructor(editInstructorForm.value)\\\"\\r\\n                fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <md-card-content>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <mat-label>Instructor</mat-label>\\r\\n                        <mat-select disabled formControlName=\\\"Instructor\\\">\\r\\n                            <mat-option *ngFor=\\\"let instructor of instructors\\\" [value]=\\\"instructor.InstructorId\\\">\\r\\n                                {{instructor.FirstName + instructor.LastName}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <mat-label>Salary Type</mat-label>\\r\\n                        <mat-select formControlName=\\\"Type\\\">\\r\\n                            <mat-option *ngFor=\\\"let type of salaryTypes\\\" [value]=\\\"type.TypeCode\\\">\\r\\n                                {{type.TypeDescription}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput type=\\\"number\\\" formControlName=\\\"Salary\\\" placeholder=\\\"Salary\\\">\\r\\n                    </mat-form-field>\\r\\n                </md-card-content>\\r\\n                <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"!editInstructorForm.valid || !editInstructorForm.dirty\\\">Save</button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </md-card>\\r\\n    </div>\"","module.exports = \"<div style=\\\"margin: 0 100px;\\\" class=\\\"main-div\\\">\\r\\n    <md-card class=\\\"full-width\\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">ADD NEWS</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"newsForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"create(newsForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"newsTitle\\\" placeholder=\\\"Title\\\">\\r\\n                </mat-form-field>\\r\\n                <div class=\\\"full-width\\\">\\r\\n                    <input #logoImage formControlName=\\\"newsLogo\\\" type=\\\"file\\\" placeholder=\\\"Logo\\\" (change)=\\\"onFileChanged($event)\\\">\\r\\n                </div>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <textarea matInput \\r\\n                              cdkTextareaAutosize\\r\\n                              #autosize=\\\"cdkTextareaAutosize\\\"\\r\\n                              cdkAutosizeMinRows=\\\"10\\\"\\r\\n                              cdkAutosizeMaxRows=\\\"50\\\"\\r\\n                              formControlName=\\\"newsText\\\" \\r\\n                              placeholder=\\\"Text\\\"></textarea>\\r\\n                </mat-form-field>    \\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!newsForm.valid || !newsForm.dirty\\\">Submit</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n        <md-card style=\\\"max-width: 500px; \\\">\\r\\n            <md-card-header>\\r\\n                <md-card-header-text>\\r\\n                    <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">EDIT PAYMENT</h2>\\r\\n                </md-card-header-text>\\r\\n            </md-card-header>\\r\\n            <form [formGroup]=\\\"editPaymentForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"updatePayment(editPaymentForm.value)\\\"\\r\\n                fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <md-card-content>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput type=\\\"number\\\" formControlName=\\\"amount\\\" placeholder=\\\"Amount\\\">\\r\\n                    </mat-form-field>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <mat-label>Type</mat-label>\\r\\n                        <mat-select formControlName=\\\"type\\\">\\r\\n                            <mat-option *ngFor=\\\"let type of types\\\" [value]=\\\"type.TypeCode\\\">\\r\\n                                {{type.TypeDescription}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n    \\r\\n                </md-card-content>\\r\\n                <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"!editPaymentForm.valid || !editPaymentForm.dirty\\\">Submit</button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </md-card>\\r\\n    </div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n        <md-card style=\\\"max-width: 500px; \\\">\\r\\n            <md-card-header>\\r\\n                <md-card-header-text>\\r\\n                    <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">EDIT SCHOOL</h2>\\r\\n                </md-card-header-text>\\r\\n            </md-card-header>\\r\\n            <form [formGroup]=\\\"schoolForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"create(schoolForm.value)\\\"\\r\\n                fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n                <md-card-content>\\r\\n                    <mat-form-field class=\\\"full-width\\\">\\r\\n                        <input matInput formControlName=\\\"schoolName\\\" placeholder=\\\"Name\\\">\\r\\n                    </mat-form-field>\\r\\n                    <div class=\\\"full-width\\\">\\r\\n                        <input #logoImage formControlName=\\\"logo\\\" type=\\\"file\\\" placeholder=\\\"Logo\\\" (change)=\\\"onFileChanged($event)\\\">\\r\\n                    </div>\\r\\n                </md-card-content>\\r\\n                <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                    <button mat-raised-button [disabled]=\\\"!schoolForm.valid || !schoolForm.dirty\\\">Submit</button>\\r\\n                </mat-card-actions>\\r\\n            </form>\\r\\n        </md-card>\\r\\n    </div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">EDIT STUDENT</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"editStudentForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"editStudent(editStudentForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"LastName\\\" placeholder=\\\"Last Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('LastName', 'required')\\\">Last Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('LastName', 'pattern')\\\">Last Name is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"FirstName\\\" placeholder=\\\"First Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('FirstName', 'required')\\\">First Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('FirstName', 'pattern')\\\">First Name is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput  [matDatepicker]=\\\"DateOfBirthPicker\\\" formControlName=\\\"DateOfBirth\\\"\\r\\n                        placeholder=\\\"Date Start\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"DateOfBirthPicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #DateOfBirthPicker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"Patrimonial\\\" placeholder=\\\"Patrimonial\\\">\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!editStudentForm.valid || !editStudentForm.dirty\\\">Save</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div style=\\\"margin:0 300px; display: flex; justify-content: center;\\\">\\r\\n        <full-calendar #calendar \\r\\n            style=\\\"width: 100%; margin-top: 10px\\\" \\r\\n            defaultView=\\\"dayGridMonth\\\" \\r\\n            eventLimit=\\\"true\\\" \\r\\n            eventLimitText=\\\"more\\\"\\r\\n            [events]=\\\"events\\\" \\r\\n            [showNonCurrentDates]=\\\"false\\\" \\r\\n            [eventStartEditable] = \\\"true\\\" \\r\\n            [plugins]=\\\"calendarPlugins\\\" \\r\\n            (datesRender)=\\\"handleDateChange()\\\" \\r\\n            (eventClick) =\\\"handleEventClick($event)\\\"         \\r\\n            (eventDrop)=\\\"eventDrop($event)\\\"\\r\\n            >\\r\\n        </full-calendar>\\r\\n    </div>\\r\\n    <div style=\\\"text-align: right; margin: 25px 300px 10px 0;\\\">\\r\\n        <button mat-raised-button (click)=\\\"createEvent()\\\">Add</button>\\r\\n    </div>\"","module.exports = \"<div *ngIf=\\\"group\\\">\\r\\n    <div [ngClass]=\\\"{title:true}\\\">\\r\\n        <h2>{{group.GroupName}}</h2>\\r\\n        <h3>{{group.SportName}}</h3>\\r\\n        <h3>{{group.SchoolName}}</h3>\\r\\n    </div>\\r\\n    <div class=\\\"title\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n        <button mat-raised-button (click)=\\\"editGroup()\\\" style=\\\"margin-right: 10px;\\\">Edit</button>\\r\\n        <button mat-raised-button (click)=\\\"deleteGroup()\\\" style=\\\"margin-right: 10px;\\\">Delete</button>\\r\\n        <button mat-raised-button (click)=\\\"openSchedule()\\\">Schedule</button>\\r\\n    </div>\\r\\n    <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Students\\\">\\r\\n            <div class=\\\"example-small-box mat-elevation-z4\\\">\\r\\n                <table mat-table [dataSource]=\\\"group.Students\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <ng-container matColumnDef=\\\"FirstName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"><a\\r\\n                                routerLink=\\\"/student/{{element.StudentId}}\\\">{{element.FirstName}}</a></td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"LastName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"><a\\r\\n                                routerLink=\\\"/student/{{element.StudentId}}\\\">{{element.LastName}}</a></td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"DateOfBirth\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.DateOfBirth}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsGroup\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsGroup;\\\"></tr>\\r\\n                </table>\\r\\n                <div style=\\\"margin-top:40px;  text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n                    <button mat-raised-button (click)=\\\"ModalStudent()\\\">Create Student</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Instructors\\\">\\r\\n            <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n                <table mat-table [dataSource]=\\\"group.GroupInstructors\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <ng-container matColumnDef=\\\"FirstName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">{{element.Instructor.FirstName}}</td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"LastName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Instructor.LastName}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"DateOfBirth\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Date </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Instructor.DateOfBirth}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"Salary\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Salary </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Salary}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"SalaryType\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Salary Type </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ getSalaryDescription(element.Type) }} </td>\\r\\n                    </ng-container>\\r\\n                  \\r\\n                    <ng-container matColumnDef=\\\"Edit\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef></th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-raised-button (click)=\\\"editInstructor(element)\\\">Edit</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                  \\r\\n                    <ng-container matColumnDef=\\\"Delete\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-raised-button\\r\\n                                (click)=\\\"deleteInstructor(element.InstructorId, group.GroupId)\\\">Delete</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n                  \\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedInstructorColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedInstructorColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <div style=\\\"margin-top:40px;  text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n                    <button mat-raised-button (click)=\\\"ModalInstructor()\\\">Add Instructor</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"groups.length > 0\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n        <h2>Groups</h2>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"groups\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"GroupName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a routerLink=\\\"/group/{{element.GroupId}}\\\"> {{element.GroupName}}</a></td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"SportName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Sport </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SportName}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"SchoolName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> School </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a routerLink=\\\"/school/{{element.SchoolId}}\\\"> {{element.SchoolName}}</a></td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n    <button style=\\\"text-align: right\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add Group</button>      \\r\\n</div>\"","module.exports = \"<h2> News section will be implemented in next release </h2>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <span class=\\\"md-title\\\" style=\\\"text-align: center\\\">Sign In Form</span>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"loginForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"login(loginForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!loginForm.valid\\\">Log in</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"isUserLogin; else NotAuthUser\\\">\\r\\n    <app-news></app-news>\\r\\n</div>\\r\\n<ng-template #NotAuthUser>\\r\\n    <app-login (loginEvent)=\\\"loginCallback()\\\"></app-login>\\r\\n</ng-template>\"","module.exports = \"<div *ngIf=\\\"news\\\" style=\\\"margin: 0 100px;\\\">\\r\\n    <div [ngClass]=\\\"{title:true}\\\">\\r\\n        <h2>{{news.Title}}</h2>\\r\\n    </div>\\r\\n    <div style=\\\"text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n        <button mat-raised-button (click)=\\\"editNews()\\\" style=\\\"margin-right: 10px;\\\">Edit</button>\\r\\n        <button mat-raised-button (click)=\\\"deleteNews()\\\" style=\\\"margin-right: 10px;\\\">Delete</button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"newsImage\\\" style=\\\"display: flex;justify-content: center;\\\">\\r\\n        <img [src]=\\\"newsImage\\\">\\r\\n    </div>\\r\\n    <article>\\r\\n        {{news.Info}}\\r\\n    </article>\\r\\n</div>\"","module.exports = \"<div class=\\\"title\\\">\\r\\n    <h2>News</h2>\\r\\n</div>\\r\\n<div style=\\\"text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n    <button style=\\\"text-align: right\\\" mat-raised-button routerLink=\\\"addnews\\\">\\r\\n        <a routerLink=\\\"addnews\\\">\\r\\n            Add News\\r\\n        </a>\\r\\n    </button>\\r\\n</div>\\r\\n<div  class=\\\"title\\\" *ngFor=\\\"let item of news\\\">\\r\\n    <section class=\\\"col-xs-12\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <h3>\\r\\n                <a routerLink=\\\"/news/{{item.NewsId}}\\\">{{item.Title}}</a>\\r\\n            </h3>\\r\\n        </div>\\r\\n\\r\\n        <article class=\\\"text\\\">\\r\\n            {{item.Info}}\\r\\n        </article>\\r\\n    </section>\\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <md-card-header>\\r\\n            <md-card-header-text>\\r\\n                <h2 class=\\\"md-title\\\" style=\\\"text-align: center\\\">REGISTER USER</h2>\\r\\n            </md-card-header-text>\\r\\n        </md-card-header>\\r\\n        <form [formGroup]=\\\"registerForm\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"register(registerForm.value)\\\"\\r\\n            fxLayout=\\\"column wrap\\\" fxLayoutAlign=\\\"center center\\\">\\r\\n            <md-card-content>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"email\\\" placeholder=\\\"Email\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('email', 'required')\\\">e-Mail is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('email', 'pattern')\\\">e-Mail is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Password\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('password', 'required')\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('password', 'pattern')\\\">Password is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"password\\\" formControlName=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('confirmPassword', 'required')\\\">Password is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('confirmPassword', 'pattern')\\\">Password is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"password\\\" formControlName=\\\"pin\\\" placeholder=\\\"Pin\\\" (keypress)=\\\"pinKeyPress($event)\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('pin', 'required')\\\">Pin is required</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput type=\\\"password\\\" formControlName=\\\"confirmPin\\\" placeholder=\\\"Confirm Pin\\\" (keypress)=\\\"pinKeyPress($event)\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('confirmPin', 'required')\\\">Pin is required</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <mat-label>User Role</mat-label>\\r\\n                    <mat-select formControlName=\\\"role\\\">\\r\\n                        <mat-option *ngFor=\\\"let role of roles\\\" [value]=\\\"role.RoleId\\\">\\r\\n                            {{role.RoleDescription}}\\r\\n                        </mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"firstName\\\" placeholder=\\\"First Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('firstName', 'required')\\\">Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('firstName', 'pattern')\\\">Name is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput formControlName=\\\"lastName\\\" placeholder=\\\"Last Name\\\">\\r\\n                    <mat-error *ngIf=\\\"hasError('lastName', 'required')\\\">Name is required</mat-error>\\r\\n                    <mat-error *ngIf=\\\"hasError('lastName', 'pattern')\\\">Name is not valid</mat-error>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"full-width\\\">\\r\\n                    <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"dateOfBirth\\\" placeholder=\\\"Date of birth\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #picker></mat-datepicker>\\r\\n                </mat-form-field>\\r\\n            </md-card-content>\\r\\n            <mat-card-actions class=\\\"display-center\\\" style=\\\"padding: 10px 0;\\\">\\r\\n                <button mat-raised-button [disabled]=\\\"!registerForm.valid\\\">Register</button>\\r\\n            </mat-card-actions>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div style=\\\"margin:0 300px; display: flex; justify-content: center;\\\">\\r\\n    <full-calendar #calendar \\r\\n        style=\\\"width: 100%; margin-top: 10px\\\" \\r\\n        defaultView=\\\"dayGridMonth\\\" \\r\\n        eventLimit=\\\"true\\\" \\r\\n        eventLimitText=\\\"more\\\"\\r\\n        [events]=\\\"events\\\" \\r\\n        [showNonCurrentDates]=\\\"false\\\" \\r\\n        [eventStartEditable] = \\\"true\\\" \\r\\n        [plugins]=\\\"calendarPlugins\\\" \\r\\n        (datesRender)=\\\"handleDateChange()\\\" \\r\\n        (eventClick) =\\\"handleEventClick($event)\\\"         \\r\\n        (eventDrop)=\\\"eventDrop($event)\\\"\\r\\n        >\\r\\n    </full-calendar>\\r\\n</div>\\r\\n<div style=\\\"text-align: right; margin: 25px 300px 10px 0;\\\">\\r\\n    <button mat-raised-button (click)=\\\"createEvent()\\\">Add</button>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"school\\\" style=\\\"margin-left: 50px;\\\">\\r\\n    <div *ngIf=\\\"schoolLogo\\\" style=\\\"display: flex;justify-content: center;\\\">\\r\\n        <img [src]=\\\"schoolLogo\\\">\\r\\n    </div>\\r\\n    <div [ngClass]=\\\"{title:true}\\\">\\r\\n        <h2>{{school.SchoolName}}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"title\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n        <button mat-raised-button (click)=\\\"editSchool()\\\" style=\\\"margin-right: 10px;\\\">Edit</button>\\r\\n        <button mat-raised-button (click)=\\\"deleteSchool()\\\" style=\\\"margin-right: 10px;\\\">Delete</button>\\r\\n        <button mat-raised-button (click)=\\\"openSchedule()\\\">Schedule</button>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"school.Groups\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"GroupName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a routerLink=\\\"/group/{{element.GroupId}}\\\"> {{element.GroupName}}</a>\\r\\n            </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"SportName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Sport </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element.SportName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsGroup\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsGroup;\\\"></tr>\\r\\n    </table>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"schools.length > 0\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n        <h2>Schools</h2>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"schools\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"SchoolName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a routerLink=\\\"/school/{{element.SchoolId}}\\\"> {{element.SchoolName}}</a></td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n</div>\\r\\n\\r\\n<div style=\\\"text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n    <button style=\\\"text-align: right\\\" mat-raised-button (click)=\\\"openDialog()\\\">Add School</button>      \\r\\n</div>\"","module.exports = \"<div class=\\\"main-div\\\">\\r\\n    <md-card style=\\\"max-width: 500px; \\\">\\r\\n        <form class=\\\"full-width\\\">\\r\\n            <mat-form-field class=\\\"full-width\\\">\\r\\n                <input type=\\\"text\\\" placeholder=\\\"Search\\\" matInput [formControl]=\\\"searchInput\\\" class=\\\"full-width\\\">\\r\\n\\r\\n                <mat-option *ngFor=\\\"let item of searchResult\\\" [value]=\\\"item.UserId\\\">\\r\\n                    <div class=\\\"search-option\\\" (click)=\\\"addParent(item.UserId)\\\" value = \\\"item.UserId\\\">\\r\\n                        {{ item.FirstName + ' ' + item.LastName }}\\r\\n                    </div>\\r\\n                </mat-option>\\r\\n            </mat-form-field>\\r\\n        </form>\\r\\n    </md-card>\\r\\n</div>\"","module.exports = \"<div class=\\\"sidebar\\\" *ngIf=\\\"isUserLogin;\\\">\\r\\n    <ul>\\r\\n        <li>\\r\\n            <a routerLink=\\\"/\\\" title=\\\"Home\\\">\\r\\n                <i class=\\\"material-icons\\\">\\r\\n                        home\\r\\n                </i>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li *ngIf=\\\"IsAdmin()\\\">\\r\\n            <a (click)=\\\"openRegisterDialog()\\\" title=\\\"Create User\\\">\\r\\n                <i class=\\\"material-icons\\\">\\r\\n                    supervised_user_circle\\r\\n                </i>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"users\\\" title=\\\"Users\\\">\\r\\n                <i class=\\\"material-icons\\\">\\r\\n                    emoji_people\\r\\n                </i>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a routerLink=\\\"groups\\\" title=\\\"Groups\\\">\\r\\n                <i class=\\\"material-icons\\\">\\r\\n                    supervisor_account\\r\\n                </i>\\r\\n            </a>\\r\\n        </li>       \\r\\n        <li>\\r\\n            <a routerLink=\\\"schools\\\" title=\\\"Schools\\\">\\r\\n                <i class=\\\"material-icons\\\">\\r\\n                    store\\r\\n                </i>\\r\\n            </a>\\r\\n        </li>\\r\\n        <li>\\r\\n            <a (click)=\\\"logOut()\\\" title=\\\"LogOut\\\">\\r\\n                <i class=\\\"material-icons\\\">\\r\\n                    power_settings_new\\r\\n                </i>\\r\\n            </a>\\r\\n        </li>\\r\\n    </ul>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"isShown\\\">\\r\\n    <img *ngIf=\\\"loadingImage\\\" [src]=\\\"loadingImage\\\"/>\\r\\n  </div>\"","module.exports = \"<div *ngIf=\\\"student\\\" style=\\\"margin-left: 50px;\\\">\\r\\n    <div [ngClass]=\\\"{title:true}\\\">\\r\\n        <h2>{{student.FirstName}}</h2>\\r\\n    </div>\\r\\n    <div [ngClass]=\\\"{title:true}\\\">\\r\\n        <h2>{{student.LastName}}</h2>\\r\\n    </div>\\r\\n    <div [ngClass]=\\\"{title:true}\\\">\\r\\n        <h2>{{student.GroupName}}</h2>\\r\\n    </div>\\r\\n    <div class=\\\"title\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n        <button mat-raised-button (click)=\\\"editStudent()\\\" style=\\\"margin-right: 10px;\\\">Edit</button>\\r\\n        <button mat-raised-button (click)=\\\"deleteStudent()\\\">Delete</button>\\r\\n    </div>\\r\\n    <mat-tab-group dynamicHeight>\\r\\n        <mat-tab label=\\\"Parents\\\">\\r\\n            <div class=\\\"example-small-box mat-elevation-z4\\\">\\r\\n                <table mat-table [dataSource]=\\\"student.Parents\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <ng-container matColumnDef=\\\"FirstName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> First Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.FirstName}} </td>\\r\\n                    </ng-container>\\r\\n                  \\r\\n                    <ng-container matColumnDef=\\\"LastName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Last Name </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.LastName}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"Delete\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-raised-button\\r\\n                                (click)=\\\"deleteParent(element.ParentId, student.StudentId)\\\">Delete</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedParentColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedParentColumns;\\\"></tr>\\r\\n                </table>\\r\\n\\r\\n                <div *ngIf=\\\"student.Parents.length < 2 && IsAdmin()\\\"\\r\\n                    style=\\\"margin-top:40px;  text-align: right; margin-right: 10%;\\\">\\r\\n                    <button mat-raised-button (click)=\\\"ModalParent()\\\">Add Parent</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n        <mat-tab label=\\\"Payments\\\">\\r\\n            <div class=\\\"example-large-box mat-elevation-z4\\\">\\r\\n                <table mat-table [dataSource]=\\\"student.Payments\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <ng-container matColumnDef=\\\"Amount\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Amount </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.Amount}} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"Type\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Type </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\"> {{ getTypeDescription(element.Type) }} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"Update\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef></th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-raised-button (click)=\\\"updatePayment(element)\\\">Edit</button>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"Delete\\\">\\r\\n                            <th mat-header-cell *matHeaderCellDef></th>\\r\\n                            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                                <button mat-raised-button (click)=\\\"deletePayment(element.PaymentId)\\\">Delete</button>\\r\\n                            </td>\\r\\n                        </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedPaymentColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedPaymentColumns;\\\"></tr>\\r\\n                </table>\\r\\n                <div style=\\\"margin-top:40px;  text-align: right; margin-right: 10%;\\\" *ngIf=\\\"IsAdmin()\\\">\\r\\n                    <button mat-raised-button (click)=\\\"addPayment()\\\">Add Payment</button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-tab>\\r\\n    </mat-tab-group>\\r\\n</div>\"","module.exports = \"<div *ngIf=\\\"users.length > 0\\\">\\r\\n    <div class=\\\"title\\\">\\r\\n        <h2>Users</h2>\\r\\n    </div>\\r\\n    <table mat-table [dataSource]=\\\"users\\\" class=\\\"mat-elevation-z8\\\">\\r\\n        <ng-container matColumnDef=\\\"FirstName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> FirstName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a> {{element.FirstName}}</a></td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"LastName\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> LastName </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a> {{element.LastName}}</a></td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Email\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Email </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a> {{element.Email}}</a></td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"DateOfBirth\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> DateOfBirth </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"><a> {{element.DateOfBirth | date:'d MMMM yyyy'}}</a></td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Delete\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                            <button mat-raised-button\\r\\n                                (click)=\\\"deleteUser(element.UserId)\\\">Delete</button>\\r\\n                        </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n    </table>\\r\\n</div>\"","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n\\r\\n::ng-deep .timepicker-backdrop-overlay {\\r\\n    z-index: 1001;    \\r\\n}\\r\\n\\r\\n::ng-deep .cdk-overlay-container {\\r\\n    z-index: 998;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-form-field-infix {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLWV2ZW50L2FkZC1ldmVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCLENBQUE7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCOztBQUVBO0lBQ0ksWUFBWTtBQUNoQjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL2FkZC1ldmVudC9hZGQtZXZlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmRpc3BsYXktY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn07XHJcblxyXG46Om5nLWRlZXAgLnRpbWVwaWNrZXItYmFja2Ryb3Atb3ZlcmxheSB7XHJcbiAgICB6LWluZGV4OiAxMDAxOyAgICBcclxufVxyXG5cclxuOjpuZy1kZWVwIC5jZGstb3ZlcmxheS1jb250YWluZXIge1xyXG4gICAgei1pbmRleDogOTk4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWluZml4IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbn0iXX0= */\"","import { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { EventService } from '../services/event.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Group } from '../models/group';\r\nimport { Event } from '../models/event';\r\n\r\n@Component({\r\n  selector: 'app-add-event',\r\n  templateUrl: './add-event.component.html',\r\n  styleUrls: ['./add-event.component.css']\r\n})\r\nexport class AddEventComponent implements OnInit {\r\n  frequencies = Constants.EventConstants.EventFrequencies;\r\n  eventForm: FormGroup;  \r\n  groups: Group[];\r\n  isGroupSectionEnabled: boolean = true;\r\n\r\n  constructor(private eventService: EventService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<AddEventComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.isGroupSectionEnabled = (this.data && this.data.GroupId === 0);    \r\n    if (this.data.loadGroups) {\r\n      this.data.loadGroups((response: Group[]) => {\r\n        this.groups = response;\r\n      });\r\n    }\r\n    this.initFormGroup();   \r\n    var el = document.querySelector('#time-input .mat-form-field-infix');\r\n    el['style'].display = 'flex';     \r\n  }\r\n\r\n  createEvent(eventForm): void {\r\n    let eventTime: string = eventForm.eventTime;\r\n    let eventDate: Date = eventForm.eventDate;\r\n    eventDate.setHours(parseInt(eventTime.substr(0, 2)), parseInt(eventTime.substr(3, 2)));\r\n    let event: Event = {\r\n        EventId: 0,\r\n        GroupId: eventForm.groupId,\r\n        EventTime: eventDate,\r\n        Duration: eventForm.duration,\r\n        AddInfo: eventForm.addInfo\r\n    }\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.eventService.createEvent(event, eventForm.frequency, eventForm.dueDate || new Date()).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Event is added!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  isDueDateEnable(): boolean {\r\n    return this.eventForm.value.frequency != 0;\r\n  }\r\n\r\n  private initFormGroup(): void {\r\n    this.eventForm = new FormGroup({\r\n      groupId: new FormControl(this.data.GroupId, [Validators.required, Validators.min(1)]),\r\n      eventDate: new FormControl(null, [Validators.required]),\r\n      eventTime: new FormControl('', [Validators.required]),\r\n      duration: new FormControl(0, [Validators.required, Validators.min(1)]),\r\n      addInfo: new FormControl(null),\r\n      frequency: new FormControl(0),\r\n      dueDate: new FormControl(null),\r\n    });\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLWdyb3VwL2FkZC1ncm91cC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCLENBQUEiLCJmaWxlIjoic3JjL2FwcC9hZGQtZ3JvdXAvYWRkLWdyb3VwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59OyJdfQ== */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { GroupService } from '../services/group.service';\r\nimport { SportService } from '../services/sport.service';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatSnackBar, MatDialogRef } from '@angular/material';\r\nimport { Group } from '../models/group';\r\nimport { Sport } from '../models/sport';\r\nimport { School } from '../models/school';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-add-group',\r\n  templateUrl: './add-group.component.html',\r\n  styleUrls: ['./add-group.component.css']\r\n})\r\nexport class AddGroupComponent implements OnInit {\r\n  public addGroupForm: FormGroup;\r\n  public sports: Sport[];\r\n  public schools: School[];\r\n\r\n  constructor(private groupService: GroupService,\r\n    private sportService: SportService,\r\n    private schoolService: SchoolService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<AddGroupComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.getSports();\r\n    this.getSchools();\r\n    this.initFormGroup();\r\n  }\r\n\r\n  addGroup(addGroupForm) {\r\n    let group: Group = {\r\n      GroupId: 0,\r\n      GroupName: addGroupForm.groupName,\r\n      SchoolId: addGroupForm.schoolId,\r\n      SchoolName: null,\r\n      SportId: addGroupForm.sportId,\r\n      SportName: null,\r\n      Students: null,\r\n      GroupInstructors: null\r\n    };\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.groupService.createGroup(group).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Group is registered!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  hasError(controlName: string, errorName: string) {\r\n    return this.addGroupForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  private initFormGroup() {\r\n    this.addGroupForm = new FormGroup({\r\n      groupName: new FormControl('', [Validators.required]),\r\n      sportId: new FormControl(0, [Validators.required, Validators.min(1)]),\r\n      schoolId: new FormControl(0, [Validators.required, Validators.min(1)])\r\n    });\r\n  };\r\n\r\n  private getSports() {\r\n    this.sportService.getSports().subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.sports = res;\r\n    });\r\n  };\r\n\r\n  private getSchools() {\r\n    this.schoolService.getSchools().subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.schools = res;\r\n    });\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLWluc3RydWN0b3IvYWRkLWluc3RydWN0b3IuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2QixDQUFBIiwiZmlsZSI6InNyYy9hcHAvYWRkLWluc3RydWN0b3IvYWRkLWluc3RydWN0b3IuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmRpc3BsYXktY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn07Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Constants } from '../constants';\r\nimport { InstructorService } from '../services/instructor.service';\r\nimport { MatSnackBar, MatSnackBarModule, MatDialogRef } from '@angular/material';\r\nimport { GroupInstructor } from '../models/group-instructor';\r\nimport { Instructor } from '../models/instructor';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SalaryType } from '../models/salary-type';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-add-instructor',\r\n  templateUrl: './add-instructor.component.html',\r\n  styleUrls: ['./add-instructor.component.css']\r\n})\r\nexport class AddInstructorComponent implements OnInit {\r\n\r\n  //public createCallback: EventEmitter;\r\n  public addInstructorForm: FormGroup;\r\n  public instructors: Instructor[];\r\n  public salaryTypes: SalaryType[];\r\n\r\n  constructor(private instructorService: InstructorService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<AddInstructorComponent>,\r\n    private spinnerService: SpinnerService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormInstructor();\r\n    this.salaryTypes = Constants.InstuctorConstants.SalaryTypes;\r\n    this.getInstructors();\r\n    //this.createCallback = new EventEmitter();\r\n  }\r\n\r\n  addInstructor(addInstructorForm) {\r\n    let groupInstructor: GroupInstructor = {\r\n      InstructorId: addInstructorForm.Instructor,\r\n      GroupId: this.data.GroupId,\r\n      Salary: addInstructorForm.Salary,\r\n      Type: addInstructorForm.Type,\r\n      Instructor: null\r\n    };\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.instructorService.addInstructor(groupInstructor).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Instructor are registered!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n\r\n  hasError(controlName: string, errorName: string) {\r\n    return this.addInstructorForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  private initFormInstructor() {\r\n    this.addInstructorForm = new FormGroup({\r\n      Instructor: new FormControl(0, [Validators.required]),\r\n      Salary: new FormControl(0, [Validators.required, Validators.min(1)]),\r\n      Type: new FormControl('', [Validators.required]),\r\n    });\r\n  };\r\n\r\n  private getInstructors() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.instructorService.getInstructors().subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.instructors = res;\r\n    })\r\n  }\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLW5ld3MvYWRkLW5ld3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2QixDQUFBIiwiZmlsZSI6InNyYy9hcHAvYWRkLW5ld3MvYWRkLW5ld3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmRpc3BsYXktY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn07Il19 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatSnackBar, MatDialogRef } from '@angular/material';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { Router } from '@angular/router';\r\nimport { NewsService } from '../services/news.service';\r\nimport { News } from '../models/news';\r\n\r\n@Component({\r\n  selector: 'app-add-news',\r\n  templateUrl: './add-news.component.html',\r\n  styleUrls: ['./add-news.component.css']\r\n})\r\nexport class AddNewsComponent implements OnInit {\r\n\r\n  public newsForm: FormGroup;\r\n  formData: FormData;\r\n\r\n  constructor(private newsService: NewsService,\r\n    private spinnerService: SpinnerService,\r\n    private router: Router,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();\r\n  }\r\n\r\n  create(newsForm) {\r\n    let news: News = {\r\n      NewsId: 0,\r\n      Title: newsForm.newsTitle,\r\n      Info: newsForm.newsText,\r\n      CreateDate: null\r\n    };\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.newsService.createNews(news).subscribe(res => {\r\n      if (this.formData){\r\n        this.newsService.addNewsImage(res, this.formData).subscribe(res => {\r\n          this.spinnerService.HideSpinner('LoadingProcess');\r\n          this.snackBar.open(\"News added!\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n        });\r\n      } else {\r\n        this.spinnerService.HideSpinner('LoadingProcess');\r\n        this.snackBar.open(\"News added!\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  public initFormGroup() {\r\n    this.newsForm = new FormGroup({\r\n      newsTitle: new FormControl(null, [Validators.required]),\r\n      newsLogo: new FormControl(null, [Validators.required]),\r\n      newsText: new FormControl(null, [Validators.required])\r\n    });\r\n  };\r\n\r\n  public onFileChanged(event) {\r\n    let newsLogo = event.target.files[0];\r\n    this.formData = new FormData();\r\n    this.formData.append('image', newsLogo, newsLogo.name);\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXBheW1lbnQvYWRkLXBheW1lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2QixDQUFBIiwiZmlsZSI6InNyYy9hcHAvYWRkLXBheW1lbnQvYWRkLXBheW1lbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmRpc3BsYXktY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn07Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { PaymentService } from '../services/payment.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Payment } from '../models/payment';\r\n\r\n@Component({\r\n  selector: 'app-add-payment',\r\n  templateUrl: './add-payment.component.html',\r\n  styleUrls: ['./add-payment.component.css']\r\n})\r\nexport class AddPaymentComponent implements OnInit {\r\n  types = Constants.PaymentConstants.PaymentTypes;\r\n  public addPaymentForm: FormGroup;  \r\n\r\n  constructor(private paymentService: PaymentService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<AddPaymentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();    \r\n  }\r\n\r\n  addPayment(addPaymentForm) {\r\n    let payment: Payment = {\r\n      PaymentId: 0,\r\n      StudentId: this.data.StudentId,\r\n      Amount: addPaymentForm.amount,\r\n      Type: addPaymentForm.type\r\n    };\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.paymentService.createPayment(payment).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Payment is added!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  private initFormGroup() {\r\n    this.addPaymentForm = new FormGroup({\r\n      type: new FormControl(null, [Validators.required]),\r\n      amount: new FormControl(0, [Validators.required, Validators.min(1)])\r\n    });\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXNjaG9vbC9hZGQtc2Nob29sLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkIsQ0FBQSIsImZpbGUiOiJzcmMvYXBwL2FkZC1zY2hvb2wvYWRkLXNjaG9vbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYWluLWRpdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufTsiXX0= */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatSnackBar, MatDialogRef } from '@angular/material';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-add-school',\r\n  templateUrl: './add-school.component.html',\r\n  styleUrls: ['./add-school.component.css']\r\n})\r\nexport class AddSchoolComponent implements OnInit {\r\n  public schoolForm: FormGroup;\r\n  formData: FormData;\r\n\r\n  constructor(private schoolService: SchoolService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<AddSchoolComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();\r\n  }\r\n\r\n  create(schoolFormValues) {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.schoolService.createSchool(schoolFormValues.schoolName, this.formData).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"School created!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  public initFormGroup() {\r\n    this.schoolForm = new FormGroup({\r\n      schoolName: new FormControl('', [Validators.required]),\r\n      logo: new FormControl('')\r\n    });\r\n  };\r\n\r\n  public onFileChanged(event) {\r\n    let logo = event.target.files[0];\r\n    this.formData = new FormData();\r\n    this.formData.append('image', logo, logo.name);\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLXN0dWRlbnQvYWRkLXN0dWRlbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2QixDQUFBIiwiZmlsZSI6InNyYy9hcHAvYWRkLXN0dWRlbnQvYWRkLXN0dWRlbnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmRpc3BsYXktY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn07Il19 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Constants } from '../constants';\r\nimport { StudentService } from '../services/student.service';\r\nimport { MatSnackBar, MatSnackBarModule, MatDialogRef } from '@angular/material';\r\nimport { Student } from '../models/student';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-add-student',\r\n  templateUrl: './add-student.component.html',\r\n  styleUrls: ['./add-student.component.css']\r\n})\r\n\r\nexport class AddStudentComponent implements OnInit {\r\n  public addStudentForm: FormGroup;\r\n\r\n  private namePattern: string = Constants.DataValidationConstants.NamePattern;\r\n\r\n  constructor(private studentService: StudentService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<AddStudentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormStudent();\r\n  }\r\n\r\n  addStudent(addStudentForm) {\r\n    let student: Student = {\r\n      FirstName: addStudentForm.FirstName,\r\n      LastName: addStudentForm.LastName,\r\n      StudentId: 0,\r\n      DateOfBirth: addStudentForm.DateOfBirth,\r\n      Patrimonial: addStudentForm.Patrimonial,\r\n      GroupName: null,\r\n      GroupId: this.data.GroupId,\r\n      Parents: null,\r\n      Payments: null\r\n    };\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.studentService.createStudent(student, this.data.GroupId).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Student are registered!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n\r\n  hasError(controlName: string, errorName: string) {\r\n    return this.addStudentForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  private initFormStudent() {\r\n    this.addStudentForm = new FormGroup({\r\n      FirstName: new FormControl('', [Validators.required, Validators.pattern(this.namePattern)]),\r\n      LastName: new FormControl('', [Validators.required, Validators.pattern(this.namePattern)]),\r\n      DateOfBirth: new FormControl(new Date(), [Validators.required]),\r\n      Patrimonial: new FormControl('')\r\n    });\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainComponent } from './main/main.component';\r\nimport { GroupsComponent } from './groups/groups.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { SchoolsComponent } from './schools/schools.component';\r\nimport { SchoolComponent } from './school/school.component';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { AddNewsComponent } from './add-news/add-news.component';\r\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\r\nimport { SchoolScheduleComponent } from './school-schedule/school-schedule.component';\r\nimport { GroupScheduleComponent } from './group-schedule/group-schedule.component';\r\nimport { EditNewsComponent } from './edit-news/edit-news.component';\r\nimport { UsersComponent } from './users/users.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: MainComponent },\r\n  { path: 'news/:id', component: NewsDetailComponent },\r\n  { path: 'editnews', component: EditNewsComponent },\r\n  { path: 'addnews', component: AddNewsComponent },\r\n  { path: 'groups', component: GroupsComponent },\r\n  { path: 'group/:id', component: GroupComponent },\r\n  { path: 'group/:id/schedule', component: GroupScheduleComponent },\r\n  { path: 'schools', component: SchoolsComponent },\r\n  { path: 'school/:id', component: SchoolComponent },\r\n  { path: 'school/:id/schedule', component: SchoolScheduleComponent },\r\n  { path: 'student/:id', component: StudentComponent },\r\n  { path: 'users', component: UsersComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \"\\r\\n* {\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    border: 0;\\r\\n    outline: 0;\\r\\n    font-size: 100%;\\r\\n    vertical-align: baseline;\\r\\n    background: transparent;\\r\\n}\\r\\n\\r\\n.main {\\r\\n    width: calc(100% - 50px);\\r\\n}\\r\\n\\r\\n#spinner {\\r\\n    position: fixed;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    margin-top: 200px;\\r\\n    width: 100%;\\r\\n    z-index: 9999\\r\\n}\\r\\n\\r\\n@media only screen and (min-width: 1440px) {\\r\\n    #spinner{\\r\\n        position: fixed;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        margin-top: 280px;\\r\\n        width: 100%;\\r\\n        z-index: 9999\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 1024px) {\\r\\n    #spinner{\\r\\n        position: fixed;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        margin-top: 280px;\\r\\n        width: 100%;\\r\\n        z-index: 9999\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 768px) {\\r\\n    #spinner{\\r\\n        position: fixed;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        margin-top: 300px;\\r\\n        width: 100%;\\r\\n        z-index: 9999\\r\\n    }\\r\\n}\\r\\n\\r\\n@media only screen and (max-width: 425px) {\\r\\n    #spinner{\\r\\n        position: fixed;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        margin-top: 200px;\\r\\n        width: 100%;\\r\\n        z-index: 9999;\\r\\n    }\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tab-labels{\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center; /* align items in Main Axis */\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tab-header, .mat-tab-nav-bar {\\r\\n    width: 80%;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tab-header{\\r\\n    align-self: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixTQUFTO0lBQ1QsVUFBVTtJQUNWLGVBQWU7SUFDZix3QkFBd0I7SUFDeEIsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWDtBQUNKOztBQUVBO0lBQ0k7UUFDSSxlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLGtCQUFrQjtRQUNsQixpQkFBaUI7UUFDakIsV0FBVztRQUNYO0lBQ0o7QUFDSjs7QUFFQTtJQUNJO1FBQ0ksZUFBZTtRQUNmLGlCQUFpQjtRQUNqQixrQkFBa0I7UUFDbEIsaUJBQWlCO1FBQ2pCLFdBQVc7UUFDWDtJQUNKO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLGVBQWU7UUFDZixpQkFBaUI7UUFDakIsa0JBQWtCO1FBQ2xCLGlCQUFpQjtRQUNqQixXQUFXO1FBQ1g7SUFDSjtBQUNKOztBQUVBO0lBQ0k7UUFDSSxlQUFlO1FBQ2YsaUJBQWlCO1FBQ2pCLGtCQUFrQjtRQUNsQixpQkFBaUI7UUFDakIsV0FBVztRQUNYLGFBQWE7SUFDakI7QUFDSjs7QUFFQTtJQUNJLHdCQUF1QjtZQUF2Qix1QkFBdUIsRUFBRSw2QkFBNkI7QUFDMUQ7O0FBRUE7SUFDSSxVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4qIHtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICBib3JkZXI6IDA7XHJcbiAgICBvdXRsaW5lOiAwO1xyXG4gICAgZm9udC1zaXplOiAxMDAlO1xyXG4gICAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xyXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuXHJcbi5tYWluIHtcclxuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSA1MHB4KTtcclxufVxyXG5cclxuI3NwaW5uZXIge1xyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICBtYXJnaW4tdG9wOiAyMDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgei1pbmRleDogOTk5OVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE0NDBweCkge1xyXG4gICAgI3NwaW5uZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgICBtYXJnaW4tdG9wOiAyODBweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB6LWluZGV4OiA5OTk5XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XHJcbiAgICAjc3Bpbm5lcntcclxuICAgICAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDI4MHB4O1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHotaW5kZXg6IDk5OTlcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgI3NwaW5uZXJ7XHJcbiAgICAgICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgICBtYXJnaW4tdG9wOiAzMDBweDtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICB6LWluZGV4OiA5OTk5XHJcbiAgICB9XHJcbn1cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICNzcGlubmVye1xyXG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLXRvcDogMjAwcHg7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgei1pbmRleDogOTk5OTtcclxuICAgIH1cclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVsc3tcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyAvKiBhbGlnbiBpdGVtcyBpbiBNYWluIEF4aXMgKi9cclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtdGFiLWhlYWRlciwgLm1hdC10YWItbmF2LWJhciB7XHJcbiAgICB3aWR0aDogODAlO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC10YWItaGVhZGVye1xyXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG59Il19 */\"","import { Component } from '@angular/core';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { SpinnerService} from './services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Fenerbahce';\r\n  spinnerName: string = 'LoadingProcess';\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { CommonModule, DatePipe } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgxMaterialTimepickerModule } from 'ngx-material-timepicker';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MainComponent } from './main/main.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthorizationService } from './services/authorization.service';\r\nimport { SportService } from './services/sport.service';\r\nimport { SchoolService } from './services/school.service';\r\nimport { GroupService } from './services/group.service';\r\nimport { InstructorService } from './services/instructor.service';\r\nimport {\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatRippleModule,\r\n  MatDatepickerModule, \r\n  MatNativeDateModule,\r\n  MatSnackBarModule,\r\n  MatSelectModule,\r\n  MatTableModule,\r\n  MatToolbarModule,\r\n  MatTabsModule,\r\n  MatDialogModule\r\n}\r\n  from '@angular/material';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RegisterUserComponent } from './register-user/register-user.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { GroupsComponent } from './groups/groups.component';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { AddGroupComponent } from './add-group/add-group.component';\r\nimport { AddStudentComponent } from './add-student/add-student.component';\r\nimport { SchoolsComponent } from './schools/schools.component';\r\nimport { AddSchoolComponent } from './add-school/add-school.component';\r\nimport { SchoolComponent } from './school/school.component';\r\nimport { AddInstructorComponent } from './add-instructor/add-instructor.component';\r\nimport { StudentService } from './services/student.service';\r\nimport { StudentComponent } from './student/student.component';\r\nimport { SearchDialogComponent } from './search-dialog/search-dialog.component';\r\nimport { SearchService } from './services/search.service';\r\nimport { EditGroupComponent } from './edit-group/edit-group.component';\r\nimport { EditStudentComponent } from './edit-student/edit-student.component';\r\nimport { EditInstructorComponent } from './edit-instructor/edit-instructor.component';\r\nimport { EditSchoolComponent } from './edit-school/edit-school.component';\r\nimport { SpinnerComponent } from './spinner/spinner.component';\r\nimport { SpinnerService } from './services/spinner.service';\r\nimport { AddPaymentComponent } from './add-payment/add-payment.component';\r\nimport { PaymentService } from './services/payment.service';\r\nimport { EditPaymentComponent } from './edit-payment/edit-payment.component';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { NewsDetailComponent } from './news-detail/news-detail.component';\r\nimport { AddNewsComponent } from './add-news/add-news.component';\r\nimport { FullCalendarModule } from '@fullcalendar/angular';\r\nimport { SchoolScheduleComponent } from './school-schedule/school-schedule.component';\r\nimport { AddEventComponent } from './add-event/add-event.component';\r\nimport { NewsService } from './services/news.service';\r\nimport { EventService } from './services/event.service';\r\nimport { EditEventComponent } from './edit-event/edit-event.component';\r\nimport { GroupScheduleComponent } from './group-schedule/group-schedule.component';\r\nimport { GlobalService } from './services/global.service';\r\nimport { EditNewsComponent } from './edit-news/edit-news.component';\r\nimport { ParentService } from './services/parent.service';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UserService } from './services/user.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MainComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    RegisterUserComponent,\r\n    SidebarComponent,\r\n    GroupsComponent,\r\n    GroupComponent,\r\n    AddGroupComponent,\r\n    AddStudentComponent,\r\n    AddInstructorComponent,\r\n    AddSchoolComponent,\r\n    SchoolsComponent,\r\n    SchoolComponent,\r\n    StudentComponent,\r\n    SearchDialogComponent,\r\n    EditGroupComponent,\r\n    EditStudentComponent,\r\n    EditInstructorComponent,\r\n    EditSchoolComponent,\r\n    SpinnerComponent,\r\n    AddPaymentComponent,\r\n    EditPaymentComponent,\r\n    NewsComponent,\r\n    NewsDetailComponent,\r\n    AddNewsComponent,\r\n    SchoolScheduleComponent,\r\n    AddEventComponent,\r\n    EditEventComponent,\r\n    GroupScheduleComponent,\r\n    EditNewsComponent,\r\n    UsersComponent,\r\n  ],\r\n  entryComponents: [\r\n    AddEventComponent,\r\n    AddGroupComponent, \r\n    AddStudentComponent, \r\n    AddSchoolComponent, \r\n    RegisterUserComponent, \r\n    AddInstructorComponent,\r\n    AddPaymentComponent,\r\n    SearchDialogComponent,\r\n    EditGroupComponent, \r\n    EditStudentComponent,\r\n    EditInstructorComponent,\r\n    EditGroupComponent,\r\n    EditSchoolComponent,\r\n    EditPaymentComponent,\r\n    EditEventComponent,\r\n    EditNewsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n    MatDatepickerModule, \r\n    MatNativeDateModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    FullCalendarModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  exports: [\r\n    AddStudentComponent,\r\n    AddGroupComponent,\r\n    AddSchoolComponent,\r\n    AddInstructorComponent,\r\n    SearchDialogComponent,    \r\n    FormsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRippleModule,\r\n    MatDatepickerModule, \r\n    MatNativeDateModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatSnackBarModule,\r\n    MatSelectModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    MatTabsModule,\r\n    MatDialogModule,\r\n    FullCalendarModule,\r\n    NgxMaterialTimepickerModule\r\n  ],\r\n  providers: [\r\n    GlobalService,\r\n    AuthorizationService,\r\n    GroupService,\r\n    SportService,\r\n    SchoolService,\r\n    InstructorService,\r\n    ParentService,\r\n    StudentService,\r\n    SearchService,\r\n    PaymentService,\r\n    NewsService,\r\n    EventService,\r\n    SpinnerService,\r\n    DatePipe,\r\n    SpinnerService,\r\n    UserService\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [\r\n    CUSTOM_ELEMENTS_SCHEMA,\r\n  ]\r\n})\r\nexport class AppModule { }\r\n","import { Role } from './models/role';\r\nimport { SalaryType } from './models/salary-type';\r\nimport { PaymentType } from './models/payment-type';\r\nimport { EventFrequency } from './models/event-frequency';\r\n\r\nexport class Constants {\r\n    static CurrentBackEndHost: string = 'http://localhost:56833/';\r\n    \r\n    //Constants for AuthorizationService\r\n    static readonly AuthorizationServiceConstants = class {\r\n\r\n        static readonly UrlForAuthorization: string = Constants.CurrentBackEndHost + 'Token';\r\n\r\n        static readonly UrlForRegistration: string = Constants.CurrentBackEndHost + 'api/Account/RegisterOfUser';\r\n    }\r\n\r\n    //Constants for data validation\r\n    static readonly DataValidationConstants = class {\r\n\r\n        static readonly NamePattern: string = \"^[а-яА-ЯёЁa-zA-Zʼ'ї Ї і І є Є-]{2,40}$\";\r\n\r\n        static readonly PasswordPattern: string = '((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%!]).{8,20})';\r\n\r\n        static readonly EmailPattern: string = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,5}$';\r\n        \r\n        static readonly MaxCountOfStudents: string;\r\n        \r\n        static readonly pricePattern: string;\r\n    }    \r\n\r\n    static readonly InstuctorConstants = class {\r\n        static readonly SalaryTypes: SalaryType[] = [\r\n            {\r\n                TypeCode: 'M',\r\n                TypeDescription: 'Monthly'\r\n            },\r\n            {\r\n                TypeCode: 'L',\r\n                TypeDescription: 'Per Lesson'\r\n            }\r\n         ];\r\n    }\r\n\r\n    static readonly PaymentConstants = class {\r\n        static readonly PaymentTypes: PaymentType[] = [\r\n            {\r\n                TypeCode: 'M',\r\n                TypeDescription: 'Monthly payments'\r\n            },\r\n            {\r\n                TypeCode: 'F',\r\n                TypeDescription: 'Fenerium'\r\n            },\r\n            {\r\n                TypeCode: 'E',\r\n                TypeDescription: 'Extra'\r\n            }\r\n         ];\r\n    }\r\n\r\n    static readonly EventConstants = class {\r\n        static readonly EventFrequencies: EventFrequency[] = [\r\n            {\r\n                FrequencyId: 0,\r\n                Description: 'None'\r\n            },\r\n            {\r\n                FrequencyId: 1,\r\n                Description: 'Weekly'\r\n            },\r\n            {\r\n                FrequencyId: 2,\r\n                Description: 'Monthly'\r\n            }\r\n         ];\r\n    }\r\n\r\n    static readonly RegistrationConstants = class {\r\n        static readonly UserRoles: Role[] = [\r\n            {\r\n                RoleId: 1,\r\n                RoleDescription: 'Director' \r\n            },\r\n            {\r\n                RoleId: 2,\r\n                RoleDescription: 'Accountant' \r\n            },\r\n            {\r\n                RoleId: 3,\r\n                RoleDescription: 'Instructor' \r\n            },\r\n            {\r\n                RoleId: 4,\r\n                RoleDescription: 'Parent' \r\n            }\r\n\r\n         ];\r\n         static readonly GrantType: string = 'grant_type=password';\r\n         static readonly Email: string = 'Email=';\r\n         static readonly Password: string = 'Password=';\r\n    }\r\n}","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n\\r\\n::ng-deep .timepicker-backdrop-overlay {\\r\\n    z-index: 1001;    \\r\\n}\\r\\n\\r\\n::ng-deep .cdk-overlay-container {\\r\\n    z-index: 998;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-form-field-infix {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1ldmVudC9lZGl0LWV2ZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkIsQ0FBQTs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvZWRpdC1ldmVudC9lZGl0LWV2ZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59O1xyXG5cclxuOjpuZy1kZWVwIC50aW1lcGlja2VyLWJhY2tkcm9wLW92ZXJsYXkge1xyXG4gICAgei1pbmRleDogMTAwMTsgICAgXHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY2RrLW92ZXJsYXktY29udGFpbmVyIHtcclxuICAgIHotaW5kZXg6IDk5ODtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1pbmZpeCB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59Il19 */\"","import { Component, OnInit, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { EventService } from '../services/event.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Event } from '../models/event';\r\n\r\n@Component({\r\n  selector: 'app-edit-event',\r\n  templateUrl: './edit-event.component.html',\r\n  styleUrls: ['./edit-event.component.css']\r\n})\r\nexport class EditEventComponent implements OnInit {\r\n  eventForm: FormGroup;\r\n\r\n  constructor(private eventService: EventService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<EditEventComponent>,\r\n    @Inject(MAT_DIALOG_DATA) private data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();\r\n    var el = document.querySelector('#time-input .mat-form-field-infix');\r\n    el['style'].display = 'flex';\r\n  }\r\n\r\n  createEvent(eventForm): void {\r\n    let eventTime: string = eventForm.eventTime;\r\n    let eventDate: Date = eventForm.eventDate;\r\n    eventDate.setHours(parseInt(eventTime.substr(0, 2)), parseInt(eventTime.substr(3, 2)));\r\n    let event: Event = {\r\n      EventId: this.data.Event.EventId,\r\n      GroupId: this.data.Event.GroupId,\r\n      EventTime: eventDate,\r\n      Duration: eventForm.duration,\r\n      AddInfo: eventForm.addInfo\r\n    }\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.eventService.updateEvent(event).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Event is edited!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  private initFormGroup(): void {\r\n    let eventTime: string = this.data.Event.EventTime.substr(11, 5);\r\n    this.eventForm = new FormGroup({\r\n      eventDate: new FormControl(this.data.Event.EventTime, [Validators.required]),\r\n      eventTime: new FormControl(eventTime, [Validators.required]),\r\n      duration: new FormControl(this.data.Event.Duration, [Validators.required, Validators.min(1)]),\r\n      addInfo: new FormControl(this.data.Event.AddInfo)\r\n    });\r\n  };\r\n\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1ncm91cC9lZGl0LWdyb3VwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkIsQ0FBQSIsImZpbGUiOiJzcmMvYXBwL2VkaXQtZ3JvdXAvZWRpdC1ncm91cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYWluLWRpdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufTsiXX0= */\"","import { Component, OnInit, Output, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { GroupService } from '../services/group.service';\r\nimport { SportService } from '../services/sport.service';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatSnackBar, MatDialogRef } from '@angular/material';\r\nimport { Group } from '../models/group';\r\nimport { Sport } from '../models/sport';\r\nimport { School } from '../models/school';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-group',\r\n  templateUrl: './edit-group.component.html',\r\n  styleUrls: ['./edit-group.component.css']\r\n})\r\nexport class EditGroupComponent implements OnInit {\r\n  public editGroupForm: FormGroup;\r\n  private group: Group;\r\n  public sports: Sport[];\r\n  public schools: School[];\r\n\r\n  constructor(private groupService: GroupService,\r\n    private sportService: SportService,\r\n    private schoolService: SchoolService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<EditGroupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.group = this.data.Group;    \r\n    this.getSports();\r\n    this.getSchools();\r\n    this.initFormGroup();\r\n  }\r\n\r\n  saveGroup(editGroupForm) {\r\n    let group: Group = {\r\n      GroupId: this.group.GroupId,\r\n      GroupName: editGroupForm.groupName,\r\n      SchoolId: editGroupForm.schoolId,\r\n      SchoolName: null,\r\n      SportId: editGroupForm.sportId,\r\n      SportName: null,\r\n      Students: null,\r\n      GroupInstructors: null\r\n    };\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.groupService.updateGroup(group).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Group is updated!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  hasError(controlName: string, errorName: string) {\r\n    return this.editGroupForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  private initFormGroup() {\r\n    this.editGroupForm = new FormGroup({\r\n      groupName: new FormControl(this.group.GroupName, [Validators.required]),\r\n      sportId: new FormControl(this.group.SportId, [Validators.required, Validators.min(1)]),\r\n      schoolId: new FormControl(this.group.SchoolId, [Validators.required, Validators.min(1)])\r\n    });\r\n  };\r\n\r\n  private getSports() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.sportService.getSports().subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.sports = res;\r\n    });\r\n  };\r\n\r\n  private getSchools() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.schoolService.getSchools().subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.schools = res;\r\n    });\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1pbnN0cnVjdG9yL2VkaXQtaW5zdHJ1Y3Rvci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCLENBQUEiLCJmaWxlIjoic3JjL2FwcC9lZGl0LWluc3RydWN0b3IvZWRpdC1pbnN0cnVjdG9yLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59OyJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { Instructor } from '../models/instructor';\r\nimport { SalaryType } from '../models/salary-type';\r\nimport { InstructorService } from '../services/instructor.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Constants } from '../constants';\r\nimport { GroupInstructor } from '../models/group-instructor';\r\n\r\n@Component({\r\n  selector: 'app-edit-instructor',\r\n  templateUrl: './edit-instructor.component.html',\r\n  styleUrls: ['./edit-instructor.component.css']\r\n})\r\nexport class EditInstructorComponent implements OnInit {\r\n\r\n  public editInstructorForm: FormGroup;\r\n  public instructors: Instructor[];\r\n  public salaryTypes: SalaryType[];\r\n\r\n  constructor(private instructorService: InstructorService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<EditInstructorComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {  \r\n    this.initFormInstructor();\r\n    this.salaryTypes = Constants.InstuctorConstants.SalaryTypes;\r\n    this.getInstructors();\r\n    //this.createCallback = new EventEmitter();\r\n  }\r\n\r\n  editInstructor(editInstructorForm) {\r\n    let groupInstructor: GroupInstructor = {\r\n      InstructorId: editInstructorForm.Instructor,\r\n      GroupId: this.data.GroupInstructor.GroupId,\r\n      Salary: editInstructorForm.Salary,\r\n      Type: editInstructorForm.Type,\r\n      Instructor: null,\r\n    };\r\n\r\n    this.instructorService.updateInstructor(groupInstructor).subscribe(res => {\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Instructor are update!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n\r\n  hasError(controlName: string, errorName: string) {\r\n    return this.editInstructorForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  private initFormInstructor() {\r\n    this.editInstructorForm = new FormGroup({\r\n      Instructor: new FormControl(this.data.GroupInstructor.InstructorId, [Validators.required]),\r\n      Salary: new FormControl(this.data.GroupInstructor.Salary, [Validators.required, Validators.min(1)]),\r\n      Type: new FormControl(this.data.GroupInstructor.Type, [Validators.required]),\r\n    });\r\n  };\r\n\r\n  private getInstructors() {\r\n    this.instructorService.getInstructors().subscribe(res => {\r\n      this.instructors = res;\r\n    })\r\n  }\r\n\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1uZXdzL2VkaXQtbmV3cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCLENBQUEiLCJmaWxlIjoic3JjL2FwcC9lZGl0LW5ld3MvZWRpdC1uZXdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59OyJdfQ== */\"","import { Component, OnInit, Output, EventEmitter, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { Router } from '@angular/router';\r\nimport { NewsService } from '../services/news.service';\r\nimport { News } from '../models/news';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-news',\r\n  templateUrl: './edit-news.component.html',\r\n  styleUrls: ['./edit-news.component.css']\r\n})\r\nexport class EditNewsComponent implements OnInit {\r\n\r\n  public newsForm: FormGroup;\r\n  private news: News;\r\n  formData: FormData;\r\n\r\n  constructor(private newsService: NewsService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<EditNewsComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.news = this.data.News;\r\n    this.initFormGroup();\r\n  }\r\n\r\n  create(newsForm) {\r\n    let news: News = {\r\n      NewsId: this.data.News.NewsId,\r\n      Title: newsForm.newsTitle,\r\n      Info: newsForm.newsText,\r\n      CreateDate: null\r\n    };\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.newsService.updateNews(news).subscribe(res => {\r\n      if (this.formData){\r\n        this.newsService.addNewsImage(news.NewsId, this.formData).subscribe(res => {\r\n          this.spinnerService.HideSpinner('LoadingProcess');\r\n          this.snackBar.open(\"News updated!\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n        });\r\n      } else {\r\n        this.spinnerService.HideSpinner('LoadingProcess');\r\n        this.snackBar.open(\"News updated!\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  public initFormGroup() {\r\n    this.newsForm = new FormGroup({\r\n      newsTitle: new FormControl(this.data.News.Title, [Validators.required]),\r\n      newsLogo: new FormControl(this.data.Image),\r\n      newsText: new FormControl(this.data.News.Info, [Validators.required])\r\n    });\r\n  };\r\n\r\n  public onFileChanged(event) {\r\n    let newsLogo = event.target.files[0];\r\n    this.formData = new FormData();\r\n    this.formData.append('image', newsLogo, newsLogo.name);\r\n  };\r\n\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1wYXltZW50L2VkaXQtcGF5bWVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCLENBQUEiLCJmaWxlIjoic3JjL2FwcC9lZGl0LXBheW1lbnQvZWRpdC1wYXltZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59OyJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Constants } from '../constants';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { PaymentService } from '../services/payment.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Payment } from '../models/payment';\r\n\r\n@Component({\r\n  selector: 'edit-add-payment',\r\n  templateUrl: './edit-payment.component.html',\r\n  styleUrls: ['./edit-payment.component.css']\r\n})\r\nexport class EditPaymentComponent implements OnInit {\r\n  types = Constants.PaymentConstants.PaymentTypes;\r\n  public editPaymentForm: FormGroup;  \r\n\r\n  constructor(private paymentService: PaymentService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<EditPaymentComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();    \r\n  }\r\n\r\n  updatePayment(addPaymentForm) {\r\n    let payment: Payment = {\r\n      PaymentId: this.data.Payment.PaymentId,\r\n      StudentId: this.data.Payment.StudentId,\r\n      Amount: addPaymentForm.amount,\r\n      Type: addPaymentForm.type\r\n    };\r\n\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.paymentService.updatePayment(payment).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Payment is edited!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  private initFormGroup() {\r\n    this.editPaymentForm = new FormGroup({\r\n      type: new FormControl(this.data.Payment.Type, [Validators.required]),\r\n      amount: new FormControl(this.data.Payment.Amount, [Validators.required, Validators.min(1)])\r\n    });\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1zY2hvb2wvZWRpdC1zY2hvb2wuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIseUJBQW1CO1lBQW5CLG1CQUFtQjtBQUN2QixDQUFBIiwiZmlsZSI6InNyYy9hcHAvZWRpdC1zY2hvb2wvZWRpdC1zY2hvb2wuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWFpbi1kaXYge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmRpc3BsYXktY2VudGVyIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn07Il19 */\"","import { Component, OnInit, Output, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatSnackBar, MatDialogRef } from '@angular/material';\r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-school',\r\n  templateUrl: './edit-school.component.html',\r\n  styleUrls: ['./edit-school.component.css']\r\n})\r\nexport class EditSchoolComponent implements OnInit {\r\n  public schoolForm: FormGroup;\r\n  private school: School;\r\n  formData: FormData;\r\n\r\n  constructor(private schoolService: SchoolService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<EditSchoolComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.school = this.data.School;\r\n    this.initFormGroup();\r\n  }\r\n\r\n  create(schoolFormValues) {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.schoolService.updateSchool(schoolFormValues.schoolName, this.school.SchoolId, this.formData).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"School created!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  public initFormGroup() {\r\n    this.schoolForm = new FormGroup({\r\n      schoolName: new FormControl(this.school.SchoolName, [Validators.required]),\r\n      logo: new FormControl(this.data.SchoolLogo)\r\n    });\r\n  };\r\n\r\n  public onFileChanged(event) {\r\n    let logo = event.target.files[0];\r\n    this.formData = new FormData();\r\n    this.formData.append('image', logo, logo.name);\r\n  };\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZWRpdC1zdHVkZW50L2VkaXQtc3R1ZGVudC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksb0JBQWE7SUFBYixhQUFhO0lBQ2Isd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2Qix5QkFBbUI7WUFBbkIsbUJBQW1CO0FBQ3ZCLENBQUEiLCJmaWxlIjoic3JjL2FwcC9lZGl0LXN0dWRlbnQvZWRpdC1zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5kaXNwbGF5LWNlbnRlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59OyJdfQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormControl, Validators, FormGroup } from '@angular/forms';\r\nimport { StudentService } from '../services/student.service';\r\nimport { MatSnackBar, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Student } from '../models/student';\r\nimport { Constants } from '../constants';\r\n\r\n@Component({\r\n  selector: 'app-edit-student',\r\n  templateUrl: './edit-student.component.html',\r\n  styleUrls: ['./edit-student.component.css']\r\n})\r\nexport class EditStudentComponent implements OnInit {\r\n//public createCallback: EventEmitter;\r\npublic editStudentForm: FormGroup;\r\n\r\nprivate namePattern: string = Constants.DataValidationConstants.NamePattern;\r\nprivate student: Student;\r\n\r\nconstructor(private studentService: StudentService,\r\n  private snackBar: MatSnackBar,\r\n  private dialogRef: MatDialogRef<EditStudentComponent>,\r\n  @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\nngOnInit() {\r\n  this.student = this.data.Student;\r\n  this.initFormStudent();\r\n  //this.createCallback = new EventEmitter();\r\n}\r\n\r\neditStudent(editStudentForm) {\r\n  let student: Student = {\r\n    FirstName: editStudentForm.FirstName,\r\n    LastName: editStudentForm.LastName,\r\n    StudentId: this.student.StudentId,\r\n    DateOfBirth: editStudentForm.DateOfBirth,\r\n    Patrimonial: editStudentForm.Patrimonial,\r\n    GroupName: this.data.GroupName,\r\n    GroupId: this.data.GroupId,\r\n    Parents: null,\r\n    Payments: null,\r\n  };\r\n\r\n  this.studentService.updateStudent(student, this.data.GroupId).subscribe(res => {\r\n    this.dialogRef.close();\r\n    this.snackBar.open(\"Student are update!\", \"Got it\", {\r\n      duration: 2000\r\n    });\r\n  });\r\n}\r\n\r\nhasError(controlName: string, errorName: string) {\r\n  return this.editStudentForm.controls[controlName].hasError(errorName);\r\n};\r\n\r\nprivate initFormStudent() {\r\n  this.editStudentForm = new FormGroup({\r\n    FirstName: new FormControl(this.student.FirstName, [Validators.required, Validators.pattern(this.namePattern)]),\r\n    LastName: new FormControl(this.student.LastName, [Validators.required, Validators.pattern(this.namePattern)]),\r\n    DateOfBirth: new FormControl(this.student.DateOfBirth, [Validators.required]),\r\n    Patrimonial: new FormControl(this.student.Patrimonial)\r\n  });\r\n};\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dyb3VwLXNjaGVkdWxlL2dyb3VwLXNjaGVkdWxlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AddEventComponent } from '../add-event/add-event.component';\r\nimport { GroupService } from '../services/group.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { EventService } from '../services/event.service';\r\nimport { EventDisplay } from '../models/event-display';\r\nimport { CalendarEvent } from '../models/calendar-event';\r\nimport { FullCalendarComponent } from '@fullcalendar/angular';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EditEventComponent } from '../edit-event/edit-event.component';\r\nimport { Event } from '../models/event';\r\n\r\n@Component({\r\n  selector: 'app-group-schedule',\r\n  templateUrl: './group-schedule.component.html',\r\n  styleUrls: ['./group-schedule.component.css']\r\n})\r\nexport class GroupScheduleComponent implements OnInit {\r\n\r\n  events: EventDisplay[];\r\n  calendarPlugins = [dayGridPlugin, interactionPlugin];\r\n  @ViewChild('calendar', { static: false }) calendarComponent: FullCalendarComponent;\r\n\r\n  constructor(private groupService: GroupService,\r\n    private spinnerService: SpinnerService,\r\n    private eventService: EventService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public datepipe: DatePipe) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleDateChange() {\r\n    this.loadData();\r\n  }\r\n\r\n  handleEventClick(info): void {\r\n    let eventId: number = info.event._def.extendedProps.EventId;\r\n    this.eventService.getEventById(eventId).subscribe(response => {\r\n      this.updateEvent(response);\r\n    });\r\n  }\r\n\r\n  eventDrop(info): void {\r\n    let newDate: string = info.event.start.toISOString(),\r\n      eventId: number = info.event._def.extendedProps.EventId;\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.eventService.updateEventDate(eventId, newDate).subscribe(response => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  createEvent(): void {\r\n    let groupId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    const dialogRef = this.dialog.open(AddEventComponent, {\r\n      width: '540px',\r\n      height: 'auto',\r\n      data: {\r\n        GroupId: groupId,\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  updateEvent(event: Event): void {\r\n    const dialogRef = this.dialog.open(EditEventComponent, {\r\n      width: '540px',\r\n      height: 'auto',\r\n      data: {\r\n        Event: event\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  private loadData(): void {\r\n    let groupId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    let month = this.calendarComponent.getApi().getDate().getMonth() + 1;\r\n    let year = this.calendarComponent.getApi().getDate().getFullYear();\r\n    this.eventService.getGroupEvents(groupId, month, year).subscribe(response => {\r\n      this.events = response.map(x => this.mapResponse(x));\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  private mapResponse(calendarEvent: CalendarEvent): EventDisplay {\r\n    return {\r\n      EventId: calendarEvent.EventId,\r\n      title: calendarEvent.GroupName + ' \\n' +\r\n        new Date(calendarEvent.EventDate).toTimeString().substring(0, 9) + '\\nDuration: ' +\r\n        calendarEvent.Duration,\r\n      date: this.datepipe.transform(new Date(calendarEvent.EventDate), 'yyyy-MM-dd')\r\n    }\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n}\\r\\n\\r\\n.title {\\r\\n    text-align: center\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tab-labels{\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center; /* align items in Main Axis */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3JvdXAvZ3JvdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixjQUFjO0FBQ2xCOztBQUVBO0lBQ0k7QUFDSjs7QUFFQTtJQUNJLFNBQVM7QUFDYjs7QUFFQTtJQUNJLHdCQUF1QjtZQUF2Qix1QkFBdUIsRUFBRSw2QkFBNkI7QUFDMUQiLCJmaWxlIjoic3JjL2FwcC9ncm91cC9ncm91cC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbn1cclxuXHJcbi50aXRsZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcclxufVxyXG5cclxuaDIge1xyXG4gICAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWxze1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IC8qIGFsaWduIGl0ZW1zIGluIE1haW4gQXhpcyAqL1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Group } from '../models/group';\r\nimport { GroupService } from '../services/group.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AddStudentComponent } from '../add-student/add-student.component';\r\nimport { AddInstructorComponent } from '../add-instructor/add-instructor.component';\r\nimport { EditGroupComponent } from '../edit-group/edit-group.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { InstructorService } from '../services/instructor.service';\r\nimport { EditInstructorComponent } from '../edit-instructor/edit-instructor.component';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { Constants } from '../constants';\r\nimport { GroupInstructor } from '../models/group-instructor';\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.css']\r\n})\r\nexport class GroupComponent implements OnInit {\r\n\r\n  private salaryTypes = Constants.InstuctorConstants.SalaryTypes;\r\n\r\n  group: Group;\r\n  displayedColumnsGroup = ['FirstName', 'LastName', 'DateOfBirth'];\r\n  displayedInstructorColumns = ['FirstName', 'LastName', 'DateOfBirth', 'Salary', 'SalaryType', 'Edit', 'Delete'];\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private groupService: GroupService,\r\n    private authService: AuthorizationService,\r\n    private instructorService: InstructorService,\r\n    private router: Router,\r\n    private spinnerService: SpinnerService,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  IsAdmin() {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  getSalaryDescription(salaryCode: string): string {\r\n    var salaryDefModel = this.salaryTypes.find(x => x.TypeCode == salaryCode);\r\n    return salaryDefModel ? salaryDefModel.TypeDescription : '';\r\n  }\r\n\r\n  ModalStudent(): void {\r\n    const dialogRef = this.dialog.open(AddStudentComponent, {\r\n      width: '540px',\r\n      height: '450px',\r\n      data: {\r\n        GroupId: this.group.GroupId\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  deleteGroup(): void {\r\n    this.groupService.deleteGroup(this.group.GroupId).subscribe(response => {\r\n      this.router.navigate(['/groups']);\r\n    });\r\n  };\r\n\r\n  openSchedule(): void {\r\n    this.router.navigate(['./schedule'], { relativeTo: this.route });\r\n  }\r\n\r\n  deleteInstructor(instructorId: number, groupId: number): void {\r\n    this.instructorService.deleteInstructor(instructorId, groupId).subscribe(response => {\r\n      this.loadData();\r\n    });\r\n  };\r\n\r\n  ModalInstructor(): void {\r\n    const dialogRef = this.dialog.open(AddInstructorComponent, {\r\n      width: '540px',\r\n      height: '450px',\r\n      data: {\r\n        GroupId: this.group.GroupId\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  editInstructor(groupInstructor: GroupInstructor): void {\r\n    const dialogRef = this.dialog.open(EditInstructorComponent, {\r\n      width: '540px',\r\n      height: '450px',\r\n      data: {\r\n        GroupInstructor: groupInstructor\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  editGroup(): void {\r\n    const dialogRef = this.dialog.open(EditGroupComponent, {\r\n      width: '540px',\r\n      height: '370px',\r\n      data: {\r\n        Group: this.group\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  private loadData() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    let groupId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.groupService.getGroupById(groupId).subscribe(response => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.group = response;\r\n    });\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n  width: 80%;\\r\\n  margin: 0 auto;\\r\\n  margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n  margin-left: 135px;\\r\\n  margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n  margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZ3JvdXBzL2dyb3Vwcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVFLFVBQVU7RUFDVixjQUFjO0VBQ2QsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFNBQVM7QUFDWCIsImZpbGUiOiJzcmMvYXBwL2dyb3Vwcy9ncm91cHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG5cclxuICB3aWR0aDogODAlO1xyXG4gIG1hcmdpbjogMCBhdXRvO1xyXG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbi50aXRsZXtcclxuICBtYXJnaW4tbGVmdDogMTM1cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG5cclxuaDIge1xyXG4gIG1hcmdpbjogMDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Group } from '../models/group';\r\nimport { GroupService } from '../services/group.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AddGroupComponent } from '../add-group/add-group.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-groups',\r\n  templateUrl: './groups.component.html',\r\n  styleUrls: ['./groups.component.css']\r\n})\r\nexport class GroupsComponent implements OnInit {\r\n \r\n  groups: Group[] = [];\r\n  displayedColumns = ['GroupName', 'SportName', 'SchoolName'];\r\n  constructor(\r\n    private groupService: GroupService,\r\n    private authService: AuthorizationService,    \r\n    public dialog: MatDialog,\r\n    private spinnerService: SpinnerService\r\n    ) { }\r\n\r\n    IsAdmin() {\r\n      return this.authService.isAdmin();\r\n    }\r\n\r\n    openDialog(): void {\r\n      const dialogRef = this.dialog.open(AddGroupComponent, {\r\n        width: '540px',\r\n        height: '380px'\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(res => {\r\n        this.loadData();\r\n      });\r\n  }  \r\n\r\n  private loadData() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.groupService.getGroups().subscribe(response => {\r\n      this.groups = response;\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n}","module.exports = \"h2 {\\r\\n    margin: 0;\\r\\n    margin-left: 60px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0lBQ1QsaUJBQWlCO0VBQ25CIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJoMiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBtYXJnaW4tbGVmdDogNjBweDtcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    height: 100vh;\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYixvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkIsQ0FBQSIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbC13aWR0aCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1haW4tZGl2IHtcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufTtcclxuIl19 */\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Constants } from '../constants';\r\nimport { Login } from '../models/login';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { MatSnackBar, MatSnackBarModule  } from '@angular/material'; \r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { GlobalService } from '../services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public loginForm: FormGroup;  \r\n\r\n  @Output() loginEvent = new EventEmitter();\r\n\r\n  public emailPattern: string = Constants.DataValidationConstants.EmailPattern;\r\n\r\n  constructor(public authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    private globalService: GlobalService,\r\n    public snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();\r\n  }\r\n\r\n  login(loginFormValues) {\r\n    let user: Login = {\r\n      UserName: loginFormValues.email,\r\n      Password: loginFormValues.password\r\n    };\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.authService.login(user).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.globalService.setToken(res);\r\n      this.loginEvent.emit(null);\r\n      this.snackBar.open(\"You are log in!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  public initFormGroup() {\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required, \r\n                                  Validators.pattern(this.emailPattern)]),\r\n      password: new FormControl('', [Validators.required, \r\n                                     Validators.minLength(8)])\r\n    });\r\n  };\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21haW4vbWFpbi5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { GlobalService } from '../services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-main',\r\n  templateUrl: './main.component.html',\r\n  styleUrls: ['./main.component.css']\r\n})\r\nexport class MainComponent implements OnInit {\r\n\r\n  isUserLogin: boolean;\r\n\r\n  constructor(\r\n    private globalService: GlobalService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.isUserLogin = this.globalService.isLoginUser();\r\n    this.globalService.storageItem.subscribe(res => {\r\n      this.isUserLogin = this.globalService.isLoginUser();\r\n    });\r\n  }\r\n\r\n  loginCallback() {\r\n    this.isUserLogin = true;\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    margin-left: 135px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-width: 50%;\\r\\n    height: auto;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3cy1kZXRhaWwvbmV3cy1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxVQUFVO0lBQ1YsY0FBYztJQUNkLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxTQUFTO0FBQ2I7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsWUFBWTtFQUNkIiwiZmlsZSI6InNyYy9hcHAvbmV3cy1kZXRhaWwvbmV3cy1kZXRhaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxle1xyXG5cclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XHJcbn1cclxuXHJcbi50aXRsZXtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMzVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbmgyIHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5cclxuaW1nIHtcclxuICAgIG1heC13aWR0aDogNTAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG4gIH0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { EditSchoolComponent } from '../edit-school/edit-school.component';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { News } from '../models/news';\r\nimport { NewsService } from '../services/news.service';\r\nimport { EditNewsComponent } from '../edit-news/edit-news.component';\r\n\r\n@Component({\r\n  selector: 'app-news-detail',\r\n  templateUrl: './news-detail.component.html',\r\n  styleUrls: ['./news-detail.component.css']\r\n})\r\nexport class NewsDetailComponent implements OnInit {\r\n\r\n  news: News;\r\n  newsImage: any;\r\n\r\n  constructor(private newsService: NewsService,\r\n    private authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }  \r\n\r\n  private loadData() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    let newsId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.newsService.getNewsById(newsId).subscribe(response => {\r\n      this.news = response;\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n    this.newsService.getNewsImageById(newsId).subscribe(response => {\r\n      this.createImageFromBlob(response);\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  editNews(): void {\r\n    const dialogRef = this.dialog.open(EditNewsComponent, {\r\n      width: '1080px',\r\n      height: '540px',\r\n      data: {\r\n        News: this.news,\r\n        Image: this.newsImage\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  deleteNews(): void {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.newsService.deleteNews(this.news.NewsId).subscribe(response => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.router.navigate(['']);\r\n    });\r\n  };  \r\n\r\n  IsAdmin() {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  private createImageFromBlob(image: Blob): any {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      this.newsImage = reader.result;\r\n    }); \r\n\r\n    if (image && image.size > 0) {\r\n       reader.readAsDataURL(image);\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    margin-bottom: 50px;\\r\\n  }\\r\\n  \\r\\n  .title{\\r\\n    margin-left: 135px;\\r\\n    margin-bottom: 30px;\\r\\n  }\\r\\n  \\r\\n  h2 {\\r\\n    margin: 0;\\r\\n  }\\r\\n  \\r\\n  .text {\\r\\n    max-height: 100px;\\r\\n    display: -webkit-box;\\r\\n    -webkit-line-clamp: 3;\\r\\n    -webkit-box-orient: vertical;\\r\\n    overflow: hidden;\\r\\n    text-overflow: ellipsis;\\r\\n    margin-right: 100px;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmV3cy9uZXdzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksVUFBVTtJQUNWLGNBQWM7SUFDZCxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxrQkFBa0I7SUFDbEIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsU0FBUztFQUNYOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLG9CQUFvQjtJQUNwQixxQkFBcUI7SUFDckIsNEJBQTRCO0lBQzVCLGdCQUFnQjtJQUNoQix1QkFBdUI7SUFDdkIsbUJBQW1CO0VBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbmV3cy9uZXdzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gIH1cclxuICBcclxuICAudGl0bGV7XHJcbiAgICBtYXJnaW4tbGVmdDogMTM1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gIH1cclxuICBcclxuICBoMiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgfVxyXG5cclxuICAudGV4dCB7XHJcbiAgICBtYXgtaGVpZ2h0OiAxMDBweDtcclxuICAgIGRpc3BsYXk6IC13ZWJraXQtYm94O1xyXG4gICAgLXdlYmtpdC1saW5lLWNsYW1wOiAzO1xyXG4gICAgLXdlYmtpdC1ib3gtb3JpZW50OiB2ZXJ0aWNhbDtcclxuICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcclxuICAgIG1hcmdpbi1yaWdodDogMTAwcHg7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { AddSchoolComponent } from '../add-school/add-school.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { News } from '../models/news';\r\nimport { NewsService } from '../services/news.service';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.css']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n\r\n  news: News[] = [];\r\n  constructor(\r\n    private newsService: NewsService,\r\n    private authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    public dialog: MatDialog\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n      this.loadData();\r\n    }\r\n\r\n    IsAdmin() {\r\n      return this.authService.isAdmin();\r\n    } \r\n\r\n    private loadData() {\r\n      this.spinnerService.ShowSpinner('LoadingProcess');\r\n      this.newsService.getNews().subscribe(response => {\r\n        this.news = response;\r\n        this.spinnerService.HideSpinner('LoadingProcess');\r\n      });\r\n    }\r\n\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcmVnaXN0ZXItdXNlci9yZWdpc3Rlci11c2VyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkIsQ0FBQSIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLXVzZXIvcmVnaXN0ZXItdXNlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYWluLWRpdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufTtcclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Constants } from '../constants';\r\nimport { User } from '../models/user';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { MatSnackBar, MatDialogRef } from '@angular/material';\r\nimport { Role } from '../models/role';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-register.user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.css']\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n  public registerForm: FormGroup;\r\n\r\n  public roles: Role[] = Constants.RegistrationConstants.UserRoles;\r\n\r\n  private namePattern: string = Constants.DataValidationConstants.NamePattern;\r\n  private passwordPattern: string = Constants.DataValidationConstants.PasswordPattern;\r\n  private emailPattern: string = Constants.DataValidationConstants.EmailPattern;\r\n\r\n  constructor(private authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<RegisterUserComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.initFormGroup();\r\n  };\r\n\r\n  register(registerFormValues) {\r\n    let user: User = {\r\n      Email: registerFormValues.email,\r\n      LastName: registerFormValues.lastName,\r\n      FirstName: registerFormValues.firstName,\r\n      UserId: 0,\r\n      DateOfBirth: registerFormValues.dateOfBirth,\r\n      Password: registerFormValues.password,\r\n      ConfirmPassword: registerFormValues.confirmPassword,\r\n      SecurityPin: registerFormValues.pin,\r\n      ConfirmPin: registerFormValues.confirmPin,\r\n      Role: registerFormValues.role,\r\n    };\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.authService.registerUser(user).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"User is registered!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  };\r\n\r\n  hasError(controlName: string, errorName: string) {\r\n    return this.registerForm.controls[controlName].hasError(errorName);\r\n  };\r\n\r\n  pinKeyPress(event: any) {\r\n    const pattern = /[0-9]/;\r\n    const inputChar = String.fromCharCode(event.charCode);\r\n\r\n    if (!pattern.test(inputChar)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  private passwordMatchValidator(formGroup: FormGroup) {\r\n    return formGroup.get('password').value === formGroup.get('confirmPassword').value &&\r\n           formGroup.get('pin').value === formGroup.get('confirmPin').value\r\n      ? null : { 'mismatch': true };\r\n  };\r\n\r\n  private initFormGroup() {\r\n    this.registerForm = new FormGroup({\r\n      email: new FormControl('', [Validators.required,\r\n      Validators.pattern(this.emailPattern)]),\r\n      password: new FormControl('', [Validators.required,\r\n      Validators.pattern(this.passwordPattern)]),\r\n      confirmPassword: new FormControl('', [Validators.required,\r\n      Validators.pattern(this.passwordPattern)]),\r\n      pin: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      confirmPin: new FormControl('', [Validators.required, Validators.minLength(4)]),\r\n      firstName: new FormControl('', [Validators.required,\r\n      Validators.pattern(this.namePattern)]),\r\n      lastName: new FormControl('', [Validators.required,\r\n      Validators.pattern(this.namePattern)]),\r\n      role: new FormControl(0, [Validators.required]),\r\n      dateOfBirth: new FormControl(new Date())\r\n    }, this.passwordMatchValidator);\r\n  };\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NjaG9vbC1zY2hlZHVsZS9zY2hvb2wtc2NoZWR1bGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { AddEventComponent } from '../add-event/add-event.component';\r\nimport { GroupService } from '../services/group.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { EventService } from '../services/event.service';\r\nimport { EventDisplay } from '../models/event-display';\r\nimport { CalendarEvent } from '../models/calendar-event';\r\nimport { FullCalendarComponent } from '@fullcalendar/angular';\r\nimport { DatePipe } from '@angular/common';\r\nimport { EditEventComponent } from '../edit-event/edit-event.component';\r\nimport { Event } from '../models/event';\r\n\r\n@Component({\r\n  selector: 'app-school-schedule',\r\n  templateUrl: './school-schedule.component.html',\r\n  styleUrls: ['./school-schedule.component.css']\r\n})\r\n\r\nexport class SchoolScheduleComponent implements OnInit {\r\n  events: EventDisplay[];\r\n  calendarPlugins = [dayGridPlugin, interactionPlugin];\r\n  @ViewChild('calendar', { static: false }) calendarComponent: FullCalendarComponent;\r\n\r\n  constructor(private groupService: GroupService,\r\n    private spinnerService: SpinnerService,\r\n    private eventService: EventService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public dialog: MatDialog,\r\n    public datepipe: DatePipe) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  handleDateChange() {\r\n    this.loadData();\r\n  }\r\n\r\n  handleEventClick(info): void {\r\n    let eventId: number = info.event._def.extendedProps.EventId;\r\n    this.eventService.getEventById(eventId).subscribe(response => {\r\n      this.updateEvent(response);\r\n    });\r\n  }\r\n\r\n  eventDrop(info): void {\r\n    let newDate: string = info.event.start.toISOString(),\r\n      eventId: number = info.event._def.extendedProps.EventId;\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.eventService.updateEventDate(eventId, newDate).subscribe(response => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n}\r\n\r\n  createEvent(): void {\r\n    let schoolId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    const dialogRef = this.dialog.open(AddEventComponent, {\r\n      width: '540px',\r\n      height: 'auto',\r\n      data: {\r\n        GroupId: 0,\r\n        loadGroups: ((loadCallBack) => {\r\n          this.groupService.getSchoolGroups(schoolId).subscribe(response => {\r\n            this.spinnerService.HideSpinner('LoadingProcess');\r\n            loadCallBack(response);\r\n          });\r\n        })\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  updateEvent(event: Event): void {\r\n    const dialogRef = this.dialog.open(EditEventComponent, {\r\n      width: '540px',\r\n      height: 'auto',\r\n      data: {\r\n        Event: event\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  private loadData(): void {\r\n    let schoolId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    let month = this.calendarComponent.getApi().getDate().getMonth() + 1;\r\n    let year = this.calendarComponent.getApi().getDate().getFullYear();\r\n    this.eventService.getSchoolEvents(schoolId, month, year).subscribe(response => {\r\n      this.events = response.map(x => this.mapResponse(x));\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  private mapResponse(calendarEvent: CalendarEvent): EventDisplay {\r\n    return {\r\n      EventId: calendarEvent.EventId,\r\n      title: calendarEvent.GroupName + ' \\n' +\r\n        new Date(calendarEvent.EventDate).toTimeString().substring(0, 9) + '\\nDuration: ' +\r\n        calendarEvent.Duration,\r\n      date: this.datepipe.transform(new Date(calendarEvent.EventDate), 'yyyy-MM-dd')\r\n    }\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    margin-left: 135px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\nimg {\\r\\n    max-width: 50%;\\r\\n    height: auto;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2Nob29sL3NjaG9vbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztJQUVJLFVBQVU7SUFDVixjQUFjO0lBQ2QsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxZQUFZO0VBQ2QiLCJmaWxlIjoic3JjL2FwcC9zY2hvb2wvc2Nob29sLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG59XHJcblxyXG4udGl0bGV7XHJcbiAgICBtYXJnaW4tbGVmdDogMTM1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgICBtYXgtd2lkdGg6IDUwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxuICB9Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { EditSchoolComponent } from '../edit-school/edit-school.component';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-school',\r\n  templateUrl: './school.component.html',\r\n  styleUrls: ['./school.component.css']\r\n})\r\nexport class SchoolComponent implements OnInit {\r\n\r\n  school: School;\r\n  schoolLogo: any;\r\n  displayedColumnsGroup = ['GroupName', 'SportName'];\r\n\r\n  constructor(private schoolService: SchoolService,\r\n    private authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  editSchool(): void {\r\n    const dialogRef = this.dialog.open(EditSchoolComponent, {\r\n      width: '540px',\r\n      height: '270px',\r\n      data: {\r\n        School: this.school,\r\n        SchoolLogo: this.schoolLogo\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });\r\n  }\r\n\r\n  deleteSchool(): void {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.schoolService.deleteSchool(this.school.SchoolId).subscribe(response => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.router.navigate(['/schools']);\r\n    });\r\n  };\r\n\r\n  openSchedule(): void {\r\n    this.router.navigate(['./schedule'], { relativeTo: this.route });\r\n  }\r\n\r\n  private loadData() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    let schoolId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.schoolService.getSchoolById(schoolId).subscribe(response => {\r\n      this.school = response;\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n    this.schoolService.getSchoolLogoById(schoolId).subscribe(response => {\r\n      this.createImageFromBlob(response);\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  IsAdmin() {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  private createImageFromBlob(image: Blob): any {\r\n    let reader = new FileReader();\r\n    reader.addEventListener(\"load\", () => {\r\n      this.schoolLogo = reader.result;\r\n    });\r\n\r\n    if (image && image.size > 0) {\r\n      reader.readAsDataURL(image);\r\n    }\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    margin-left: 135px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2Nob29scy9zY2hvb2xzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksVUFBVTtJQUNWLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksU0FBUztBQUNiIiwiZmlsZSI6InNyYy9hcHAvc2Nob29scy9zY2hvb2xzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG59XHJcblxyXG4udGl0bGV7XHJcbiAgICBtYXJnaW4tbGVmdDogMTM1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { School } from '../models/school';\r\nimport { SchoolService } from '../services/school.service';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\r\nimport { AddSchoolComponent } from '../add-school/add-school.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-schools',\r\n  templateUrl: './schools.component.html',\r\n  styleUrls: ['./schools.component.css']\r\n})\r\nexport class SchoolsComponent implements OnInit {\r\n\r\n  schools: School[] = [];\r\n  displayedColumns = ['SchoolName'];\r\n  constructor(\r\n    private schoolService: SchoolService,\r\n    private authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    public dialog: MatDialog\r\n    ) { }\r\n\r\n    IsAdmin() {\r\n      return this.authService.isAdmin();\r\n    }\r\n\r\n    openDialog(): void {\r\n      const dialogRef = this.dialog.open(AddSchoolComponent, {\r\n        width: '540px',\r\n        height: '310px'\r\n      });\r\n  \r\n      dialogRef.afterClosed().subscribe(res => {\r\n        this.loadData();\r\n      });\r\n    }\r\n  \r\n    ngOnInit() {\r\n      this.loadData();\r\n    }\r\n\r\n    private loadData() {\r\n      this.spinnerService.ShowSpinner('LoadingProcess');\r\n      this.schoolService.getSchools().subscribe(response => {\r\n        this.schools = response;\r\n        this.spinnerService.HideSpinner('LoadingProcess');\r\n      });\r\n    }\r\n}\r\n","module.exports = \".full-width {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.main-div {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n}\\r\\n\\r\\n.display-center {\\r\\n    display: -webkit-box;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n};\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VhcmNoLWRpYWxvZy9zZWFyY2gtZGlhbG9nLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxvQkFBYTtJQUFiLGFBQWE7SUFDYix3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLHlCQUFtQjtZQUFuQixtQkFBbUI7QUFDdkIsQ0FBQSIsImZpbGUiOiJzcmMvYXBwL3NlYXJjaC1kaWFsb2cvc2VhcmNoLWRpYWxvZy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYWluLWRpdiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uZGlzcGxheS1jZW50ZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufTsiXX0= */\"","import { Component, OnInit, Output, Inject } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { MatSnackBar, MatDialogRef  } from '@angular/material'; \r\nimport { MAT_DIALOG_DATA } from '@angular/material';\r\nimport { EventEmitter } from 'events';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { SearchService } from '../services/search.service';\r\nimport { Parent } from '../models/parent';\r\nimport { StudentParent } from '../models/student-parent';\r\nimport { SpinnerService } from '../services/spinner.service';\r\n\r\n@Component({\r\n  selector: 'app-search-dialog',\r\n  templateUrl: './search-dialog.component.html',\r\n  styleUrls: ['./search-dialog.component.css']\r\n})\r\nexport class SearchDialogComponent implements OnInit {\r\n\r\n  searchInput: FormControl = new FormControl();\r\n  searchResult: Parent[] = [];\r\n\r\n  constructor(private searchService: SearchService, \r\n    private spinnerService: SpinnerService,   \r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private snackBar: MatSnackBar,\r\n    private dialogRef: MatDialogRef<SearchDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n    this.searchInput.valueChanges.pipe(debounceTime(500))\r\n    .subscribe(input => {\r\n      let inputLine = input.toString();\r\n      if (inputLine != null && inputLine != \"\") {\r\n        this.searchResult.length = 0;\r\n        this.searchService.searchParent(inputLine).subscribe(res => {\r\n            this.searchResult = res;\r\n        });\r\n      }\r\n      else {\r\n        this.searchResult.length = 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  addParent(parentId: number) {\r\n    let data: StudentParent = {\r\n      ParentId: parentId,\r\n      StudentId: this.data.StudentId\r\n    }\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.searchService.addParent(data).subscribe(res => {\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n      this.dialogRef.close();\r\n      this.snackBar.open(\"Parent added!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n    });\r\n  }\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { User } from '../models/user';\r\nimport { Login } from '../models/login';\r\nimport { Constants } from '../constants';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { GlobalService } from './global.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class AuthorizationService {\r\n    private urlForRegisterUser: string = Constants.AuthorizationServiceConstants.UrlForRegistration;\r\n    private urlForLogin: string = Constants.AuthorizationServiceConstants.UrlForAuthorization;\r\n    private token: any;\r\n\r\n    constructor(private _http: HttpClient,\r\n        private snackBar: MatSnackBar) {\r\n    }\r\n\r\n    registerUser(user: User): Observable<any> {\r\n        let tokenData = 'Bearer ' + this.getToken(),        \r\n            headers = new HttpHeaders().\r\n                        set('Content-Type', 'application/json').\r\n                        set('Authorization', tokenData),        \r\n           content = user;\r\n        \r\n        return this._http.post(this.urlForRegisterUser, content, { headers: headers }).pipe(\r\n            catchError(res => {\r\n                this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n                  duration: 2000\r\n                });\r\n                return this.handleError(res);\r\n              })\r\n        );\r\n    }\r\n\r\n    login(user: Login): Observable<any> {\r\n        var headers = new HttpHeaders().\r\n                        set('Content-Type', 'application/x-www-form-urlencoded').\r\n                        set('Environement', 'Browser');\r\n        var content = Constants.RegistrationConstants.GrantType + \r\n                      '&username=' + user.UserName + \r\n                      '&password=' + user.Password;\r\n        return this._http.post(this.urlForLogin, content, { headers: headers }).pipe(\r\n            catchError(res => {\r\n                this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n                  duration: 2000\r\n                });\r\n                return this.handleError(res);\r\n              })\r\n        );\r\n    }\r\n\r\n    getToken(): string {\r\n        if (localStorage.getItem(\"user\")) {\r\n            let user = JSON.parse(atob(localStorage.getItem(\"user\")));\r\n            return user ? user.access_token : null;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    isAdmin(): boolean {\r\n        if (localStorage.getItem(\"user\")) {\r\n            let user = JSON.parse(atob(localStorage.getItem(\"user\")));\r\n            return user ? user.roleId == 1 : false;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    private handleError(error: HttpErrorResponse) {\r\n        if (error.error instanceof ErrorEvent) {\r\n            // A client-side or network error occurred. Handle it accordingly.\r\n            console.error('An error occurred:', error.error.message);\r\n        } else {\r\n            // The backend returned an unsuccessful response code.\r\n            // The response body may contain clues as to what went wrong,\r\n            console.error(\r\n                `Backend returned code ${error.status}, ` +\r\n                `body was: ${error.error}`);\r\n        }\r\n        // return an observable with a user-facing error message\r\n        return throwError(\r\n            'Something bad happened; please try again later.');\r\n    };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\nimport { Event } from '../models/event';\r\nimport { CalendarEvent } from '../models/calendar-event';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EventService {\r\n\r\n  private urlForCreateEvent: string = Constants.CurrentBackEndHost + 'api/Event/CreateEvent';\r\n  private urlForUpdateEvent: string = Constants.CurrentBackEndHost + 'api/Event/UpdateEvent';\r\n  private urlForUpdateEventDate: string = Constants.CurrentBackEndHost + 'api/Event/UpdateEventDate';\r\n  private urlForDeleteEvent: string = Constants.CurrentBackEndHost + 'api/Event/Delete';\r\n  private urlForGetSchoolEvents: string = Constants.CurrentBackEndHost + 'api/Event/GetSchoolEvents';\r\n  private urlForGetGroupEvents: string = Constants.CurrentBackEndHost + 'api/Event/GetGroupEvents';\r\n  private urlForGetEvent: string = Constants.CurrentBackEndHost + 'api/Event/GetEvent';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getSchoolEvents(schoolId: number, monthId: number, year: number): Observable<CalendarEvent[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('schoolId', schoolId.toString()).\r\n        set('monthId', monthId.toString()).\r\n        set('year', year.toString());\r\n\r\n    return this._http.get<CalendarEvent[]>(this.urlForGetSchoolEvents, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getGroupEvents(groupId: number, monthId: number, year: number): Observable<CalendarEvent[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('groupId', groupId.toString()).\r\n        set('monthId', monthId.toString()).\r\n        set('year', year.toString());\r\n\r\n    return this._http.get<CalendarEvent[]>(this.urlForGetGroupEvents, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getEventById(eventId: number): Observable<Event> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('eventId', eventId.toString());\r\n\r\n\r\n    return this._http.get<Event>(this.urlForGetEvent, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  createEvent(event: Event, frequency: number, dueDate = new Date()): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = event,\r\n      params = new HttpParams().\r\n        set('eventFrequency', frequency.toString()).\r\n        set('dueDate', dueDate.toISOString());\r\n\r\n    return this._http.post(this.urlForCreateEvent, content, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateEvent(event: Event): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = event;\r\n\r\n    return this._http.put(this.urlForUpdateEvent, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateEventDate(eventId: number, eventDate: string): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('eventId', eventId.toString()).\r\n        set('eventDate', eventDate);\r\n\r\n\r\n    return this._http.put(this.urlForUpdateEventDate, null, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteEvent(eventId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('eventId', eventId.toString());\r\n\r\n    return this._http.delete(this.urlForDeleteEvent, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GlobalService {\r\n  storageItem = new Subject();\r\n\r\n  setToken(tokenData: any): void {\r\n      localStorage.setItem(\"user\", btoa(JSON.stringify(tokenData)));\r\n    this.storageItem.next(tokenData);\r\n  }\r\n\r\n  removeToken(): void {\r\n    localStorage.removeItem(\"user\");\r\n    this.storageItem.next(null);\r\n  }\r\n\r\n  isLoginUser(): boolean {\r\n    return this.getToken() !== null;\r\n  }\r\n\r\n  private getToken(): string {\r\n    if (localStorage.getItem(\"user\")) {\r\n      let user = JSON.parse(atob(localStorage.getItem(\"user\")));\r\n      return user ? user.access_token : null;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Group } from '../models/group';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GroupService {\r\n  private urlForGetGroups: string = Constants.CurrentBackEndHost + 'api/Group/GetAllGroups';\r\n  private urlForGetSchoolGroups: string = Constants.CurrentBackEndHost + 'api/Group/GetSchoolGroups';\r\n  private urlForGetGroup: string = Constants.CurrentBackEndHost + 'api/Group/GetGroupById';\r\n  private urlForCreateGroup: string = Constants.CurrentBackEndHost + 'api/Group/CreateGroup';\r\n  private urlForUpdateGroup: string = Constants.CurrentBackEndHost + 'api/Group/UpdateGroup';\r\n  private urlForDeleteGroup: string = Constants.CurrentBackEndHost + 'api/Group/DeleteGroup';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getGroups(): Observable<Group[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData);\r\n\r\n    return this._http.get<Group[]>(this.urlForGetGroups, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getSchoolGroups(schoolId: number): Observable<Group[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('schoolId', schoolId.toString());\r\n\r\n    return this._http.get<Group[]>(this.urlForGetSchoolGroups, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getGroupById(groupId: number): Observable<Group> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('groupId', groupId.toString());\r\n\r\n    return this._http.get<Group>(this.urlForGetGroup, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  createGroup(group: Group): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = group;\r\n\r\n    return this._http.post(this.urlForCreateGroup, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateGroup(group: Group): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = group;\r\n\r\n    return this._http.put(this.urlForUpdateGroup, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteGroup(groupId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('groupId', groupId.toString());\r\n\r\n    return this._http.delete(this.urlForDeleteGroup, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Instructor } from '../models/instructor';\r\nimport { GroupInstructor } from '../models/group-instructor';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { Group } from '../models/group';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InstructorService {\r\n\r\n  private urlForGetInstructors: string = Constants.CurrentBackEndHost + 'api/Instructor/GetInstructors';\r\n  private urlForAddInstructor: string = Constants.CurrentBackEndHost + 'api/Instructor/AddInstructor';\r\n  private urlForUpdateInstructor: string = Constants.CurrentBackEndHost + 'api/Instructor/UpdateInstructor';\r\n  private urlForDeleteInstructor: string = Constants.CurrentBackEndHost + 'api/Instructor/DeleteInstructor';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getInstructors(): Observable<Instructor[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData);\r\n\r\n    return this._http.get<Instructor[]>(this.urlForGetInstructors, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  addInstructor(groupInstructor: GroupInstructor): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n       content = groupInstructor;\r\n    \r\n    return this._http.post(this.urlForAddInstructor, content, { headers: headers }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n}\r\n\r\nupdateInstructor(groupInstructor: GroupInstructor): Observable<any> {\r\n  let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n      headers = new HttpHeaders().\r\n                  set('Content-Type', 'application/json').\r\n                  set('Authorization', tokenData),        \r\n     content = groupInstructor;\r\n  \r\n  return this._http.put(this.urlForUpdateInstructor, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n  );\r\n}\r\n\r\ndeleteInstructor(instructorId: number, groupId: number): Observable<any> {\r\n  let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n      headers = new HttpHeaders().\r\n                  set('Content-Type', 'application/json').\r\n                  set('Authorization', tokenData),        \r\n      params = new HttpParams().\r\n                  set('instructorId', instructorId.toString()).\r\n                  set('groupId', groupId.toString());\r\n  \r\n  return this._http.delete(this.urlForDeleteInstructor, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n  );\r\n}\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { News } from '../models/news';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsService {\r\n\r\n  private urlForGetNews: string = Constants.CurrentBackEndHost + 'api/News/GetAllNews';\r\n  private urlForGetNewsDetail: string = Constants.CurrentBackEndHost + 'api/News/GetNewsById';\r\n  private urlForCreateNews: string = Constants.CurrentBackEndHost + 'api/News/CreateNews';\r\n  private urlForAddNewsImage: string = Constants.CurrentBackEndHost + 'api/News/AddNewsImage';\r\n  private urlForGetNewsImage: string = Constants.CurrentBackEndHost + 'api/News/GetNewsImage';\r\n  private urlForUpdateNews: string = Constants.CurrentBackEndHost + 'api/News/UpdateNews';\r\n  private urlForDeleteNews: string = Constants.CurrentBackEndHost + 'api/News/DeleteNews';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getNews(): Observable<News[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData);\r\n\r\n    return this._http.get<News[]>(this.urlForGetNews, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getNewsById(newsId: number): Observable<News> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('newsId', newsId.toString());\r\n\r\n    return this._http.get<News>(this.urlForGetNewsDetail, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getNewsImageById(newsId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n            set('newsId', newsId.toString());   \r\n\r\n    return this._http.get(this.urlForGetNewsImage, { headers: headers, params: params, responseType: 'blob' }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  createNews(news: News): Observable<number> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = news;\r\n\r\n    return this._http.post<number>(this.urlForCreateNews, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  addNewsImage(newsId: number, image: FormData): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Authorization', tokenData),\r\n      content = image,\r\n      params = new HttpParams().\r\n        set('newsId', newsId.toString());\r\n\r\n    return this._http.put(this.urlForAddNewsImage, content, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  updateNews(news: News): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = news;\r\n\r\n    return this._http.put<number>(this.urlForUpdateNews, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteNews(newsId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('newsId', newsId.toString());\r\n\r\n    return this._http.delete(this.urlForDeleteNews, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ParentService {\r\n  private urlForDeleteParent: string = Constants.CurrentBackEndHost + 'api/Parent/DeleteParent';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  \r\ndeleteParent(parentId: number, studentId: number): Observable<any> {\r\n  let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n      headers = new HttpHeaders().\r\n                  set('Content-Type', 'application/json').\r\n                  set('Authorization', tokenData),        \r\n      params = new HttpParams().\r\n                  set('parentId', parentId.toString()).\r\n                  set('studentId', studentId.toString());\r\n  \r\n  return this._http.delete(this.urlForDeleteParent, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n  );\r\n}\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Payment } from '../models/payment';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PaymentService {\r\n  private urlForCreatePayment: string = Constants.CurrentBackEndHost + 'api/Payment/CreatePayment';\r\n  private urlForUpdatePayment: string = Constants.CurrentBackEndHost + 'api/Payment/UpdatePayment';\r\n  private urlForDeletePayment: string = Constants.CurrentBackEndHost + 'api/Payment/Delete';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  createPayment(payment: Payment): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n       content = payment;\r\n    \r\n    return this._http.post(this.urlForCreatePayment, content, { headers: headers }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  updatePayment(payment: Payment): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n       content = payment;\r\n    \r\n    return this._http.put(this.urlForUpdatePayment, content, { headers: headers }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  deletePayment(paymentId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n        params = new HttpParams().\r\n                    set('paymentId', paymentId.toString());\r\n    \r\n    return this._http.delete(this.urlForDeletePayment, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { School } from '../models/school';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SchoolService {\r\n\r\n  private urlForGetSchools: string = Constants.CurrentBackEndHost + 'api/School/GetAll';\r\n  private urlForGetSchool: string = Constants.CurrentBackEndHost + 'api/School/GetSchoolById';\r\n  private urlForCreateSchool: string = Constants.CurrentBackEndHost + 'api/School/CreateSchool';\r\n  private urlForDeleteSchool: string = Constants.CurrentBackEndHost + 'api/School/DeleteSchool';\r\n  private urlForGetSchoolLogo: string = Constants.CurrentBackEndHost + 'api/School/GetSchoolImage';\r\n  private urlForUpdateSchool: string = Constants.CurrentBackEndHost + 'api/School/UpdateSchool';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getSchools(): Observable<School[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData);\r\n\r\n    return this._http.get<School[]>(this.urlForGetSchools, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getSchoolLogoById(schoolId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n            set('schoolId', schoolId.toString());   \r\n\r\n    return this._http.get(this.urlForGetSchoolLogo, { headers: headers, params: params, responseType: 'blob' }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  getSchoolById(schoolId: number): Observable<School> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n            set('schoolId', schoolId.toString());   \r\n\r\n    return this._http.get<School>(this.urlForGetSchool, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  createSchool(schoolName: string, logo: FormData): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().                   \r\n                    set('Authorization', tokenData),        \r\n        content = logo,\r\n        params = new HttpParams().\r\n                    set('schoolName', schoolName);   \r\n    \r\n    return this._http.post(this.urlForCreateSchool, content, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  updateSchool(schoolName: string, schoolId: number, logo: FormData): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().                   \r\n                    set('Authorization', tokenData),        \r\n        content = logo,\r\n        params = new HttpParams().\r\n                    set('schoolId', schoolId.toString()).\r\n                    set('schoolName', schoolName);   \r\n    \r\n    return this._http.put(this.urlForUpdateSchool, content, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  deleteSchool(schoolId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n        params = new HttpParams().\r\n                    set('schoolId', schoolId.toString());\r\n    \r\n    return this._http.delete(this.urlForDeleteSchool, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Parent } from '../models/parent';\r\nimport { StudentParent } from '../models/student-parent';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  private urlForSearchParents: string = Constants.CurrentBackEndHost + 'api/Group/Search';\r\n  private urlForAddParent: string = Constants.CurrentBackEndHost + 'api/Parent/AddParent';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) {\r\n  }\r\n\r\n  searchParent(searchLine: string): Observable<Parent[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n        set('searchCriteria', searchLine).\r\n        set('roleId', '4');\r\n\r\n    return this._http.get<Parent[]>(this.urlForSearchParents, { headers: headers, params: params }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  addParent(studentParent: StudentParent) {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      content = studentParent;\r\n\r\n    return this._http.post(this.urlForAddParent, content, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { SpinnerComponent } from '../spinner/spinner.component';\r\n\r\n\r\n@Injectable()\r\nexport class SpinnerService {\r\n\r\n  private spinnerSet = new Set<SpinnerComponent>();\r\n\r\n  constructor(  ) {\r\n    \r\n   }\r\n\r\n  public Register(spinner: SpinnerComponent): void {\r\n    this.spinnerSet.add(spinner);\r\n  }\r\n\r\n  public ShowSpinner(spinnerName: string): void {\r\n    this.spinnerSet.forEach(spinner => {\r\n      if (spinner.name === spinnerName) {\r\n        spinner.isShown = true;\r\n        \r\n      }\r\n    });\r\n  }\r\n\r\n  public HideSpinner(spinnerName: string): void {\r\n    this.spinnerSet.forEach(spinner => {\r\n      if (spinner.name === spinnerName) {\r\n        spinner.isShown = false;\r\n       \r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Sport } from '../models/sport';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SportService {\r\n  private urlForGetSports: string = Constants.CurrentBackEndHost + 'api/sport/GetAll';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getSports(): Observable<Sport[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData);\r\n\r\n    return this._http.get<Sport[]>(this.urlForGetSports, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { Student } from '../models/student';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StudentService {\r\n  private urlForCreateStudent: string = Constants.CurrentBackEndHost + 'api/Student/CreateStudent';\r\n  private urlForGetStudent: string = Constants.CurrentBackEndHost + 'api/Student/GetStudent';\r\n  private urlForDeleteStudent: string = Constants.CurrentBackEndHost + 'api/Student/DeleteStudent';\r\n  private urlForUpdateStudent: string = Constants.CurrentBackEndHost + 'api/Student/UpdateStudent';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n    createStudent(student: Student, groupId: number): Observable<any> {\r\n      let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n          headers = new HttpHeaders().\r\n                      set('Content-Type', 'application/json').\r\n                      set('Authorization', tokenData),        \r\n         content = student,\r\n         params = new HttpParams().\r\n                      set('groupId', groupId.toString());\r\n      \r\n      return this._http.post(this.urlForCreateStudent, content, { headers: headers, params: params }).pipe(\r\n          catchError(res => {\r\n            this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n              duration: 2000\r\n            });\r\n            return this.handleError(res);\r\n          })\r\n      );\r\n  }\r\n\r\n  updateStudent(student: Student, groupId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n       content = student,\r\n       params = new HttpParams().\r\n                    set('groupId', groupId.toString());\r\n    \r\n    return this._http.put(this.urlForUpdateStudent, content, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n}\r\n\r\n  getStudent(studentId: number): Observable<Student> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData),\r\n      params = new HttpParams().\r\n            set('studentId', studentId.toString());   \r\n\r\n    return this._http.get<Student>(this.urlForGetStudent, { headers: headers, params: params }).pipe(\r\n      catchError(this.handleError)\r\n    );\r\n  };\r\n\r\n  deleteStudent(studentId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n        params = new HttpParams().\r\n                    set('studentId', studentId.toString());\r\n    \r\n    return this._http.delete(this.urlForDeleteStudent, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}","import { Observable, throwError, pipe } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\r\nimport { AuthorizationService } from './authorization.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { Constants } from '../constants';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private urlForGetUsers: string = Constants.CurrentBackEndHost + 'api/User/GetUsers';\r\n  private urlForDelete: string = Constants.CurrentBackEndHost + 'api/User/DeleteUser';\r\n\r\n  constructor(private _http: HttpClient,\r\n    private authService: AuthorizationService,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),\r\n      headers = new HttpHeaders().\r\n        set('Content-Type', 'application/json').\r\n        set('Authorization', tokenData);\r\n\r\n    return this._http.get<User[]>(this.urlForGetUsers, { headers: headers }).pipe(\r\n      catchError(res => {\r\n        this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n          duration: 2000\r\n        });\r\n        return this.handleError(res);\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteUser(userId: number): Observable<any> {\r\n    let tokenData = 'Bearer ' + this.authService.getToken(),        \r\n        headers = new HttpHeaders().\r\n                    set('Content-Type', 'application/json').\r\n                    set('Authorization', tokenData),        \r\n        params = new HttpParams().\r\n                    set('userId', userId.toString());\r\n    \r\n    return this._http.delete(this.urlForDelete, { headers: headers, params: params }).pipe(\r\n        catchError(res => {\r\n          this.snackBar.open(\"An Error Occured! Please, try again\", \"Got it\", {\r\n            duration: 2000\r\n          });\r\n          return this.handleError(res);\r\n        })\r\n    );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong,\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n\r\n    // return an observable with a user-facing error message\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  };\r\n}\r\n","module.exports = \"ul {\\r\\n    list-style-type: none;\\r\\n    padding: 15px;\\r\\n    margin-top: 0;\\r\\n}\\r\\n\\r\\nli {\\r\\n    margin: 15px 0;\\r\\n    cursor: pointer; \\r\\n}\\r\\n\\r\\na {\\r\\n    display: inline-block; \\r\\n    position: relative; \\r\\n}\\r\\n\\r\\n.sidebar {\\r\\n    width: 50px;\\r\\n    background: yellow;\\r\\n    height: 100vh;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxxQkFBcUI7SUFDckIsYUFBYTtJQUNiLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxjQUFjO0lBQ2QsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLHFCQUFxQjtJQUNyQixrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLGFBQWE7QUFDakIiLCJmaWxlIjoic3JjL2FwcC9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInVsIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW4tdG9wOiAwO1xyXG59XHJcblxyXG5saSB7XHJcbiAgICBtYXJnaW46IDE1cHggMDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjsgXHJcbn1cclxuXHJcbmEge1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrOyBcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsgXHJcbn1cclxuXHJcbi5zaWRlYmFyIHtcclxuICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgYmFja2dyb3VuZDogeWVsbG93O1xyXG4gICAgaGVpZ2h0OiAxMDB2aDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { RegisterUserComponent } from '../register-user/register-user.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { GlobalService } from '../services/global.service';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.css']\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n\r\n  isUserLogin: boolean;\r\n\r\n  constructor(public dialog: MatDialog,\r\n    private authService: AuthorizationService,\r\n    private globalService: GlobalService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.isUserLogin = this.globalService.isLoginUser();\r\n    this.globalService.storageItem.subscribe(res => {\r\n      this.isUserLogin = this.globalService.isLoginUser();\r\n    });\r\n  }\r\n\r\n  IsAdmin() {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  openRegisterDialog(): void {\r\n    const dialogRef = this.dialog.open(RegisterUserComponent, {\r\n      width: '540px',\r\n      height: '760px'\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n  logOut(): void {\r\n    this.globalService.removeToken();\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","module.exports = \"img{\\r\\n    display: block;\\r\\n    margin-left: auto;\\r\\n    margin-right: auto;\\r\\n    width: 30%;\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (min-width: 1025px) {\\r\\n    img {\\r\\n        display: block;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        width: 15%;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 1024px) {\\r\\n    img {\\r\\n        display: block;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        width: 20%;\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 768px) {\\r\\n    \\r\\n    img {\\r\\n        display: block;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        width: 20%;\\r\\n     }\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 425px) {\\r\\n    img{\\r\\n        display: block;\\r\\n        margin-left: auto;\\r\\n        margin-right: auto;\\r\\n        width: 30%;\\r\\n    }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxjQUFjO0lBQ2QsaUJBQWlCO0lBQ2pCLGtCQUFrQjtJQUNsQixVQUFVO0FBQ2Q7OztBQUdBO0lBQ0k7UUFDSSxjQUFjO1FBQ2QsaUJBQWlCO1FBQ2pCLGtCQUFrQjtRQUNsQixVQUFVO0lBQ2Q7QUFDSjs7O0FBRUE7SUFDSTtRQUNJLGNBQWM7UUFDZCxpQkFBaUI7UUFDakIsa0JBQWtCO1FBQ2xCLFVBQVU7SUFDZDtBQUNKOzs7QUFFQTs7SUFFSTtRQUNJLGNBQWM7UUFDZCxpQkFBaUI7UUFDakIsa0JBQWtCO1FBQ2xCLFVBQVU7S0FDYjs7QUFFTDs7O0FBRUE7SUFDSTtRQUNJLGNBQWM7UUFDZCxpQkFBaUI7UUFDakIsa0JBQWtCO1FBQ2xCLFVBQVU7SUFDZDtBQUNKIiwiZmlsZSI6InNyYy9hcHAvc3Bpbm5lci9zcGlubmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWd7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgd2lkdGg6IDMwJTtcclxufVxyXG5cclxuXHJcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTAyNXB4KSB7XHJcbiAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgICB3aWR0aDogMTUlO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xyXG4gICAgaW1nIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW4tbGVmdDogYXV0bztcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgICAgICAgd2lkdGg6IDIwJTtcclxuICAgIH1cclxufVxyXG5cclxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgXHJcbiAgICBpbWcge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gICAgICAgIG1hcmdpbi1yaWdodDogYXV0bztcclxuICAgICAgICB3aWR0aDogMjAlO1xyXG4gICAgIH1cclxuICAgIFxyXG59XHJcblxyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBpbWd7XHJcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgICAgIHdpZHRoOiAzMCU7XHJcbiAgICB9XHJcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { SpinnerService } from './../services/spinner.service';\r\nimport { trigger, state, style, animate, transition } from '@angular/animations';\r\nimport { Constants } from './../constants';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.css']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  @Input() name: string;\r\n  @Input() loadingImage: string = '../assets/img/LoadingAnimations/spinner1.gif';\r\n  @Input() isShown: boolean = false;\r\n\r\n  public spinnerName: string;\r\n\r\n  constructor(private spinnerService: SpinnerService) \r\n  { }\r\n\r\n  ngOnInit() {\r\n    if(!this.name) throw new Error(\"Spinner must have a 'name' attribute.\")\r\n    this.spinnerService.Register(this);\r\n    this.spinnerName = 'LoadingProcess';\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    margin-left: 135px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    margin: 0;\\r\\n}\\r\\n\\r\\n.search-option {\\r\\n    display:block; \\r\\n    text-decoration: none;\\r\\n}\\r\\n\\r\\n.form {\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n#search{\\r\\n    background-color:rgb(240, 240, 240); \\r\\n    z-index: 999;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksVUFBVTtJQUNWLGNBQWM7SUFDZCxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxrQkFBa0I7SUFDbEIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksU0FBUztBQUNiOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFHQTtJQUNJLG1DQUFtQztJQUNuQyxZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvc3R1ZGVudC9zdHVkZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZXtcclxuXHJcbiAgICB3aWR0aDogODAlO1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG59XHJcblxyXG4udGl0bGV7XHJcbiAgICBtYXJnaW4tbGVmdDogMTM1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG5oMiB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5zZWFyY2gtb3B0aW9uIHtcclxuICAgIGRpc3BsYXk6YmxvY2s7IFxyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG59XHJcblxyXG4uZm9ybSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuXHJcbiNzZWFyY2h7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOnJnYigyNDAsIDI0MCwgMjQwKTsgXHJcbiAgICB6LWluZGV4OiA5OTk7XHJcbn0iXX0= */\"","import { Component, OnInit, Input, Inject, HostListener } from '@angular/core';\r\nimport { StudentService } from '../services/student.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Student } from '../models/student';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SearchDialogComponent } from '../search-dialog/search-dialog.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { EditStudentComponent } from '../edit-student/edit-student.component';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { AddPaymentComponent } from '../add-payment/add-payment.component';\r\nimport { Constants } from '../constants';\r\nimport { Payment } from '../models/payment';\r\nimport { EditPaymentComponent } from '../edit-payment/edit-payment.component';\r\nimport { PaymentService } from '../services/payment.service';\r\nimport { MatSnackBar } from '@angular/material';\r\nimport { ParentService } from '../services/parent.service';\r\n\r\n@Component({\r\n  selector: 'app-student',\r\n  templateUrl: './student.component.html',\r\n  styleUrls: ['./student.component.css']\r\n})\r\nexport class StudentComponent implements OnInit {\r\n\r\n  student: Student;\r\n  paymentTypes = Constants.PaymentConstants.PaymentTypes;\r\n  displayedParentColumns = ['FirstName', 'LastName', 'Delete'];\r\n  displayedPaymentColumns = ['Amount', 'Type', 'Update', 'Delete'];\r\n\r\n  constructor(private studentService: StudentService,\r\n    private authService: AuthorizationService,\r\n    private parentService: ParentService,\r\n    private paymentService: PaymentService,\r\n    private spinnerService: SpinnerService,\r\n    private snackBar: MatSnackBar,\r\n    private router: Router,\r\n    private route: ActivatedRoute,    \r\n    public dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n\r\n  IsAdmin() {\r\n    return this.authService.isAdmin();\r\n  }\r\n\r\n  ModalParent(): void {\r\n    const dialogRef = this.dialog.open(SearchDialogComponent, {\r\n      width: '240px',\r\n      height: 'auto',\r\n      data: {\r\n        StudentId: this.student.StudentId,\r\n        searchCallback: 'searchParent'\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });    \r\n  }\r\n\r\n  deleteParent(parentId: number, studentId: number): void {\r\n    this.parentService.deleteParent(parentId, studentId).subscribe(response => {\r\n      this.loadData();\r\n    });  \r\n  };\r\n\r\n  deleteStudent(): void {\r\n    this.studentService.deleteStudent(this.student.StudentId).subscribe(response => {\r\n      this.router.navigate(['/group/', this.student.GroupId]);\r\n    });\r\n  };\r\n\r\n  editStudent(): void {\r\n    const dialogRef = this.dialog.open(EditStudentComponent, {\r\n      width: '540px',\r\n      height: '450px',\r\n      data: {\r\n        Student: this.student,\r\n        GroupId: this.student.GroupId\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n        this.loadData();\r\n    });\r\n  }\r\n\r\n  addPayment(): void {\r\n    const dialogRef = this.dialog.open(AddPaymentComponent, {\r\n      width: '540px',\r\n      height: 'auto',\r\n      data: {\r\n        StudentId: this.student.StudentId\r\n      }\r\n    });\r\n    dialogRef.afterClosed().subscribe(res => {\r\n      this.loadData();\r\n    });    \r\n  }\r\n\r\n  updatePayment(payment: Payment): void {\r\n    const dialogRef = this.dialog.open(EditPaymentComponent, {\r\n      width: '540px',\r\n      height: 'auto',\r\n      data: {\r\n        Payment: payment\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(res => {\r\n        this.loadData();\r\n    });\r\n  }\r\n\r\n  deletePayment(paymentId: number): void { \r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    this.paymentService.deletePayment(paymentId).subscribe(response => {\r\n      let payments = this.student.Payments;\r\n      this.student.Payments = payments.filter(item => item.PaymentId != paymentId);\r\n      this.snackBar.open(\"Payment is deleted!\", \"Got it\", {\r\n        duration: 2000\r\n      });\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n\r\n  getTypeDescription(typeCode: string): string {\r\n    let typeModel = this.paymentTypes.find(item => item.TypeCode === typeCode);\r\n    return typeModel ? typeModel.TypeDescription : '';\r\n  }\r\n  \r\n  private loadData() {\r\n    this.spinnerService.ShowSpinner('LoadingProcess');\r\n    let studentId = Number.parseInt(this.route.snapshot.paramMap.get('id'));\r\n    this.studentService.getStudent(studentId).subscribe(response => {\r\n      this.student = response;\r\n      this.spinnerService.HideSpinner('LoadingProcess');\r\n    });\r\n  }\r\n}\r\n","module.exports = \"table{\\r\\n\\r\\n    width: 80%;\\r\\n    margin: 0 auto;\\r\\n    margin-bottom: 50px;\\r\\n}\\r\\n\\r\\n.title{\\r\\n    margin-left: 135px;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\nh2 {\\r\\n    margin: 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlcnMvdXNlcnMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7SUFFSSxVQUFVO0lBQ1YsY0FBYztJQUNkLG1CQUFtQjtBQUN2Qjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxTQUFTO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC91c2Vycy91c2Vycy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGV7XHJcblxyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxufVxyXG5cclxuLnRpdGxle1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEzNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxufVxyXG5cclxuaDIge1xyXG4gICAgbWFyZ2luOiAwO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { School } from '../models/school';\r\nimport { MatDialog} from '@angular/material/dialog';\r\nimport { AddSchoolComponent } from '../add-school/add-school.component';\r\nimport { AuthorizationService } from '../services/authorization.service';\r\nimport { SpinnerService } from '../services/spinner.service';\r\nimport { UserService } from '../services/user.service';\r\nimport { User } from '../models/user';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.css']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  users: User[] = [];\r\n  displayedColumns = ['FirstName', 'LastName', 'Email', 'DateOfBirth', 'Delete'];\r\n  constructor(\r\n    private userService: UserService,\r\n    private authService: AuthorizationService,\r\n    private spinnerService: SpinnerService,\r\n    public dialog: MatDialog\r\n    ) { }\r\n\r\n    IsAdmin() {\r\n      return this.authService.isAdmin();\r\n    }\r\n\r\n    // openDialog(): void {\r\n    //   const dialogRef = this.dialog.open(AddSchoolComponent, {\r\n    //     width: '540px',\r\n    //     height: '310px'\r\n    //   });\r\n  \r\n    //   dialogRef.afterClosed().subscribe(res => {\r\n    //     this.loadData();\r\n    //   });\r\n    // }\r\n  \r\n    ngOnInit() {\r\n      this.loadData();\r\n    }\r\n\r\n    deleteUser(userId: number) {\r\n      this.userService.deleteUser(userId).subscribe(response => {\r\n        this.loadData();\r\n      });  \r\n    }\r\n\r\n    private loadData() {\r\n      this.spinnerService.ShowSpinner('LoadingProcess');\r\n      this.userService.getUsers().subscribe(response => {\r\n        this.users = response;\r\n        this.spinnerService.HideSpinner('LoadingProcess');\r\n      });\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}